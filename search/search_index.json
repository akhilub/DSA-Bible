{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DSA-Bible","text":"<p>Welcome to the grand collection of DSA &amp; Large Optimizations problems with their solutions!</p> <p>This site contains detailed explanations of several data structures and implementations of various algorithms through LeetCode problems.</p> Akhil Singh Chauhan                          Creator"},{"location":"#problem-categories","title":"Problem Categories","text":"<p>Blind 75</p> <p>Grind 75</p> <p>Interview Master 100</p> <p>Neetcode 150</p> <p>Grind 169</p> <p>Neetcode 250</p> <p>Air Transport</p> <p>Array</p> <p>Backtracking</p> <p>Binary Search</p> <p>Binary Search Tree</p> <p>Binary Tree</p> <p>Bit Manipulation</p> <p>Breadth-First Search</p> <p>Data Stream</p> <p>Depth-First Search</p> <p>Design</p> <p>Divide and Conquer</p> <p>Dynamic Programming</p> <p>Greedy</p> <p>Ground Transport</p> <p>Hash Table</p> <p>Heap (Priority Queue)</p> <p>Interactive</p> <p>LP</p> <p>Linked List</p> <p>MIP</p> <p>Math</p> <p>Matrix</p> <p>Memoization</p> <p>Monotonic Stack</p> <p>Optimization</p> <p>Recursion</p> <p>Sliding Window</p> <p>Stack</p> <p>String</p> <p>Tree</p> <p>Trie</p> <p>Two Pointers</p> <p>For a complete list of problem categories, see the Topics page.</p>"},{"location":"#companies-asked-problems","title":"Companies Asked Problems","text":"<p>Meta</p> <p>Amazon</p> <p>Apple</p> <p>Netflix</p> <p>Google</p> <p>Microsoft</p> <p>Uber</p> <p>Lyft</p> <p>Airbnb</p> <p>Tesla</p> <p>OpenAI</p> <p>Oracle</p> <p>X (formerly Twitter)</p> <p>For a complete list of company asked problems, see the Companies page.</p>"},{"location":"#terminology","title":"Terminology","text":"<p>Comprehend DSA &amp; Optimizations techniques terminologies from here Glossary.</p>"},{"location":"companies/","title":"Company-Wise Asked Problems \ud83d\udd12","text":"<p>Below is the classification of problems based on asked by various companies for focused practice.</p> <p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"companies/#tag:airbnb","title":"Airbnb","text":"<ul> <li>            42. Trapping Rain Water          </li> </ul>"},{"location":"companies/#tag:amazon","title":"Amazon","text":"<ul> <li>            1. Two Sum          </li> <li>            139. Word Break          </li> <li>            2. Add Two Numbers          </li> </ul>"},{"location":"companies/#tag:apple","title":"Apple","text":"<ul> <li>            19. Remove Nth Node From End of List          </li> </ul>"},{"location":"companies/#tag:google","title":"Google","text":"<ul> <li>            139. Word Break          </li> <li>            4. Median of Two Sorted Arrays          </li> </ul>"},{"location":"companies/#tag:lyft","title":"Lyft","text":"<ul> <li>            2226. Maximum Candies Allocated to K Children          </li> <li>            746. Min Cost Climbing Stairs          </li> </ul>"},{"location":"companies/#tag:meta","title":"Meta","text":"<ul> <li>            139. Word Break          </li> <li>            2. Add Two Numbers          </li> <li>            50. Pow(x, n)          </li> </ul>"},{"location":"companies/#tag:microsoft","title":"Microsoft","text":"<ul> <li>            139. Word Break          </li> <li>            212. Word Search II          </li> <li>            3. Longest Substring Without Repeating Characters          </li> </ul>"},{"location":"companies/#tag:netflix","title":"Netflix","text":"<ul> <li>            29. Divide Two Integers          </li> </ul>"},{"location":"companies/#tag:openai","title":"OpenAI","text":"<ul> <li>            74. Search a 2D Matrix          </li> </ul>"},{"location":"companies/#tag:oracle","title":"Oracle","text":"<ul> <li>            20. Valid Parentheses          </li> </ul>"},{"location":"companies/#tag:tesla","title":"Tesla","text":"<ul> <li>            1. Two Sum          </li> <li>            1095. Find in Mountain Array          </li> </ul>"},{"location":"companies/#tag:uber","title":"Uber","text":"<ul> <li>            374. Guess Number Higher or Lower          </li> </ul>"},{"location":"companies/#tag:x-formerly-twitter","title":"X (formerly Twitter)","text":"<ul> <li>            355. Design Twitter          </li> </ul>"},{"location":"pricing/","title":"Pricing","text":"Choose a Plan Monthly Yearly One-time Pro Plan <p>Gain access to all content!</p> $6 per month        Subscribe      <ul> <li>Unlock over 400 solutions across 28 problem categories</li> <li>Early access to new content</li> <li>Priority support</li> </ul> Pro Plan <p>Gain access to all content!</p> $51 per year        Subscribe      <ul> <li>Unlock over 400 solutions across 28 problem categories</li> <li>Early access to new content</li> <li>Priority support</li> </ul> Pro Plan <p>Gain access to all content!</p> $251 lifetime        Buy Now      <ul> <li>Unlock over 400 solutions across 28 problem categories</li> <li>Early access to new content</li> <li>Priority support</li> </ul>"},{"location":"topics/","title":"TOPICS","text":"<p>Below is the classification of problems based on topics, useful while cementing any particular data structure, algorithm or topic.</p> Akhil Singh Chauhan                          Creator"},{"location":"topics/#tag:air-transport","title":"Air Transport","text":"<ul> <li>            3. Composing flight crews          </li> </ul>"},{"location":"topics/#tag:array","title":"Array","text":"<ul> <li>            1. Two Sum          </li> <li>            1095. Find in Mountain Array          </li> <li>            135. Candy          </li> <li>            139. Word Break          </li> <li>            212. Word Search II          </li> <li>            2226. Maximum Candies Allocated to K Children          </li> <li>            240. Search a 2D Matrix II          </li> <li>            4. Median of Two Sorted Arrays          </li> <li>            407. Trapping Rain Water II          </li> <li>            42. Trapping Rain Water          </li> <li>            74. Search a 2D Matrix          </li> <li>            746. Min Cost Climbing Stairs          </li> <li>            79. Word Search          </li> </ul>"},{"location":"topics/#tag:backtracking","title":"Backtracking","text":"<ul> <li>            212. Word Search II          </li> <li>            52. N-Queens II          </li> <li>            79. Word Search          </li> </ul>"},{"location":"topics/#tag:binary-search","title":"Binary Search","text":"<ul> <li>            1095. Find in Mountain Array          </li> <li>            2226. Maximum Candies Allocated to K Children          </li> <li>            240. Search a 2D Matrix II          </li> <li>            374. Guess Number Higher or Lower          </li> <li>            4. Median of Two Sorted Arrays          </li> <li>            74. Search a 2D Matrix          </li> </ul>"},{"location":"topics/#tag:binary-search-tree","title":"Binary Search Tree","text":"<ul> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:binary-tree","title":"Binary Tree","text":"<ul> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:bit-manipulation","title":"Bit Manipulation","text":"<ul> <li>            29. Divide Two Integers          </li> </ul>"},{"location":"topics/#tag:breadth-first-search","title":"Breadth-First Search","text":"<ul> <li>            407. Trapping Rain Water II          </li> </ul>"},{"location":"topics/#tag:data-stream","title":"Data Stream","text":"<ul> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:depth-first-search","title":"Depth-First Search","text":"<ul> <li>            79. Word Search          </li> </ul>"},{"location":"topics/#tag:design","title":"Design","text":"<ul> <li>            355. Design Twitter          </li> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:divide-and-conquer","title":"Divide and Conquer","text":"<ul> <li>            240. Search a 2D Matrix II          </li> <li>            4. Median of Two Sorted Arrays          </li> </ul>"},{"location":"topics/#tag:dynamic-programming","title":"Dynamic Programming","text":"<ul> <li>            139. Word Break          </li> <li>            42. Trapping Rain Water          </li> <li>            5. Longest Palindromic Substring          </li> <li>            746. Min Cost Climbing Stairs          </li> </ul>"},{"location":"topics/#tag:greedy","title":"Greedy","text":"<ul> <li>            135. Candy          </li> </ul>"},{"location":"topics/#tag:grind-169","title":"Grind 169","text":"<ul> <li>            1. Two Sum          </li> <li>            2. Add Two Numbers          </li> <li>            50. Pow(x, n)          </li> </ul>"},{"location":"topics/#tag:ground-transport","title":"Ground Transport","text":"<ul> <li>            6. Depot Location          </li> </ul>"},{"location":"topics/#tag:hash-table","title":"Hash Table","text":"<ul> <li>            1. Two Sum          </li> <li>            139. Word Break          </li> <li>            3. Longest Substring Without Repeating Characters          </li> <li>            355. Design Twitter          </li> </ul>"},{"location":"topics/#tag:heap-priority-queue","title":"Heap (Priority Queue)","text":"<ul> <li>            355. Design Twitter          </li> <li>            407. Trapping Rain Water II          </li> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:interactive","title":"Interactive","text":"<ul> <li>            1095. Find in Mountain Array          </li> <li>            374. Guess Number Higher or Lower          </li> </ul>"},{"location":"topics/#tag:interview-master-100","title":"Interview Master 100","text":"<ul> <li>            1. Two Sum          </li> <li>            19. Remove Nth Node From End of List          </li> <li>            2. Add Two Numbers          </li> <li>            20. Valid Parentheses          </li> <li>            3. Longest Substring Without Repeating Characters          </li> <li>            42. Trapping Rain Water          </li> <li>            5. Longest Palindromic Substring          </li> <li>            50. Pow(x, n)          </li> <li>            703. Kth Largest Element in a Stream          </li> <li>            74. Search a 2D Matrix          </li> <li>            746. Min Cost Climbing Stairs          </li> </ul>"},{"location":"topics/#tag:lp","title":"LP","text":"<ul> <li>            1. Mixed Integer Programming          </li> <li>            4. N Queen          </li> </ul>"},{"location":"topics/#tag:linked-list","title":"Linked List","text":"<ul> <li>            19. Remove Nth Node From End of List          </li> <li>            2. Add Two Numbers          </li> <li>            355. Design Twitter          </li> </ul>"},{"location":"topics/#tag:mip","title":"MIP","text":"<ul> <li>            1. Mixed Integer Programming          </li> <li>            3. Composing flight crews          </li> <li>            4. N Queen          </li> <li>            6. Depot Location          </li> </ul>"},{"location":"topics/#tag:math","title":"Math","text":"<ul> <li>            2. Add Two Numbers          </li> <li>            29. Divide Two Integers          </li> <li>            50. Pow(x, n)          </li> </ul>"},{"location":"topics/#tag:matrix","title":"Matrix","text":"<ul> <li>            212. Word Search II          </li> <li>            240. Search a 2D Matrix II          </li> <li>            4. N Queen          </li> <li>            4. N Queen          </li> <li>            407. Trapping Rain Water II          </li> <li>            74. Search a 2D Matrix          </li> <li>            79. Word Search          </li> </ul>"},{"location":"topics/#tag:memoization","title":"Memoization","text":"<ul> <li>            139. Word Break          </li> </ul>"},{"location":"topics/#tag:monotonic-stack","title":"Monotonic Stack","text":"<ul> <li>            42. Trapping Rain Water          </li> </ul>"},{"location":"topics/#tag:neetcode-250","title":"Neetcode 250","text":"<ul> <li>            355. Design Twitter          </li> </ul>"},{"location":"topics/#tag:optimization","title":"Optimization","text":"<ul> <li>            3. Composing flight crews          </li> <li>            4. N Queen          </li> <li>            4. N Queen          </li> <li>            6. Depot Location          </li> </ul>"},{"location":"topics/#tag:recursion","title":"Recursion","text":"<ul> <li>            2. Add Two Numbers          </li> <li>            50. Pow(x, n)          </li> </ul>"},{"location":"topics/#tag:sliding-window","title":"Sliding Window","text":"<ul> <li>            3. Longest Substring Without Repeating Characters          </li> </ul>"},{"location":"topics/#tag:stack","title":"Stack","text":"<ul> <li>            20. Valid Parentheses          </li> <li>            42. Trapping Rain Water          </li> </ul>"},{"location":"topics/#tag:string","title":"String","text":"<ul> <li>            139. Word Break          </li> <li>            20. Valid Parentheses          </li> <li>            212. Word Search II          </li> <li>            3. Longest Substring Without Repeating Characters          </li> <li>            5. Longest Palindromic Substring          </li> <li>            79. Word Search          </li> </ul>"},{"location":"topics/#tag:tree","title":"Tree","text":"<ul> <li>            703. Kth Largest Element in a Stream          </li> </ul>"},{"location":"topics/#tag:trie","title":"Trie","text":"<ul> <li>            139. Word Break          </li> <li>            212. Word Search II          </li> </ul>"},{"location":"topics/#tag:two-pointers","title":"Two Pointers","text":"<ul> <li>            19. Remove Nth Node From End of List          </li> <li>            42. Trapping Rain Water          </li> <li>            5. Longest Palindromic Substring          </li> </ul>"},{"location":"glossary/definitions/","title":"Definitions","text":"Akhil Singh Chauhan                          Creator"},{"location":"glossary/definitions/#general-algorithmstechniques","title":"General algorithms/techniques","text":""},{"location":"glossary/definitions/#recursion","title":"Recursion","text":"<ul> <li>A recursive algorithm is one that calls itself to solve smaller instances of the same problem, ultimately reaching a base case that can be solved directly.</li> <li>It breaks down a problem into subproblems until a simple, solvable case is reached, then combines the solutions to build the solution for the original problem.</li> <li>Defining a problem in terms of itself, often leading to elegant and concise solutions.</li> </ul> <pre><code>  %%{init: {\"themeVariables\": {\"fontSize\":\"18px\"}, \"flowchart\": {\"curve\": \"monotoneY\"}} }%%\n  flowchart TD\n    Start((Start)):::start e1@==&gt; CallFunc{\"Is Base Case?\"}:::decision\n    CallFunc e2@==&gt;|Yes| BaseCase([\"Return Result (Base Case)\"]):::endClass\n    CallFunc e3@==&gt;|No| Recurse[\"Call function&lt;br&gt;again with&lt;br&gt;simpler input\"]:::recurse\n    Recurse e4@==&gt;|Recursive Call| CallFunc\n    BaseCase e5@==&gt; Output[\"Result unwinds&lt;br&gt;back through calls\"]:::output\n\n    classDef animate stroke-dasharray: 9,5,stroke-dashoffset: 900,animation: dash 10s linear infinite;\n\n    class e1,e2,e3,e4,e5 animate;\n\n    classDef start fill:#8ead52,stroke:#16634d,stroke-width:2px;\n    classDef decision fill:#ffb9009c,stroke:#b07a29,stroke-width:2px;\n    classDef recurse fill:#19f6f98f,stroke:#7fa0f77a,stroke-width:2px,font-style:italic;\n    classDef returnNode fill:#bdf7b7,stroke:#24581c,stroke-width:2px;\n    classDef output fill:#b44adc8c,stroke:#8150ae,stroke-width:2px,font-style:italic;\n\n    class Start start;\n    class CallFunc decision;\n    class ReturnNode returnNode;\n    class Recurse recurse;\n    class Output output;</code></pre>"},{"location":"glossary/definitions/#dynamic-programming","title":"Dynamic Programming","text":"<ul> <li>Breaking down a problem into overlapping subproblems and storing solutions to avoid recomputation.</li> </ul> <pre><code>%%{init: { 'securityLevel': 'loose', 'theme': 'default', 'flowchart': {'curve': 'monotoneY'}}}%%\n  flowchart TD\n      A[Original Problem] e1@==&gt; B{Is Subproblem Solved?}\n      B e2@==&gt;|No| C[Break Down into Subproblems]\n      C e3@==&gt; D[Solve Subproblem]\n      D e4@==&gt; E[Store Solution in Memory]\n      E e5@==&gt; F[Use Stored Solution]\n      B e6@==&gt;|Yes| F\n      F e7@==&gt; G[Solve Original Problem Efficiently]\n\n      classDef animate stroke-dasharray: 5,3,stroke-dashoffset: 900,animation: dash 10s linear infinite;\n\n      class e1,e2,e3,e4,e5,e6,e7 animate;\n\n      %% Animation Hints\n      click A \"javascript:void(0)\" \"Start with the main problem\"\n      click B \"javascript:void(0)\" \"Check if subproblem was solved\"\n      click C \"javascript:void(0)\" \"Divide into overlapping subproblems\"\n      click D \"javascript:void(0)\" \"Solve the required subproblem\"\n      click E \"javascript:void(0)\" \"Store the solution to avoid recomputation\"\n      click F \"javascript:void(0)\" \"Reuse stored result\"\n      click G \"javascript:void(0)\" \"Problem solved efficiently!\"</code></pre>"},{"location":"glossary/definitions/#divide-conquer","title":"Divide &amp; Conquer","text":"<ul> <li>A divide-and-conquer algorithm recursively breaks down a problem into two or more sub-problems of the same or related type, until these become simple enough to be solved directly. The solutions to the sub-problems are then combined to give a solution to the original problem.</li> </ul>"},{"location":"glossary/definitions/#greedy-algorithms","title":"Greedy Algorithms","text":"<ul> <li>Making locally optimal choices at each step with the hope of finding a global optimum.</li> </ul>"},{"location":"glossary/definitions/#backtracking","title":"Backtracking","text":"<ul> <li>Incrementally building solutions, exploring all possible paths, and abandoning invalid ones.</li> </ul>"},{"location":"glossary/definitions/#arrays-strings","title":"Arrays &amp; Strings","text":""},{"location":"glossary/definitions/#subsequence","title":"Subsequence","text":"<ul> <li>A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.</li> </ul>"},{"location":"glossary/definitions/#substring","title":"Substring","text":"<ul> <li>A substring is a contiguous non-empty sequence of characters within a string.</li> </ul>"},{"location":"glossary/definitions/#consider-a-string-of-n-characters-s_0s_1s_2s_n-1","title":"Consider a string of n characters: \"\\(s_0s_1s_2...s_{n-1}\\)\"","text":"<ul> <li>No. of <code>substring</code> = \\({C^n_2}\\) + \\({C^n_1}\\) = \\(n(n+1)/2\\)</li> <li>\\({C^n_2}\\) - because substring contains more than one character</li> <li>\\({C^n_1}\\) - because one character in itself is a substring</li> </ul>"},{"location":"glossary/definitions/#palindromic","title":"Palindromic","text":"<ul> <li>A string is palindromic if it reads the same forward and backward.</li> </ul>"},{"location":"glossary/definitions/#monotonic","title":"Monotonic","text":"<ul> <li>Elements are entirely non-decreasing or non-increasing</li> </ul>"},{"location":"glossary/definitions/#circular-array","title":"Circular Array","text":"<ul> <li>Array where the end connects to the beginning</li> </ul>"},{"location":"glossary/definitions/#partition","title":"Partition","text":"<ul> <li>Dividing array into parts based on specific criteria</li> </ul>"},{"location":"glossary/definitions/#kadanes-algorithm","title":"Kadane's Algorithm","text":"<ul> <li>Technique to find maximum subarray sum subarray</li> </ul>"},{"location":"glossary/definitions/#two-pointers","title":"Two Pointers","text":"<ul> <li>Using two index pointers to solve array problems</li> </ul>"},{"location":"glossary/definitions/#sliding-window","title":"Sliding Window","text":"<ul> <li>Technique of maintaining a window that slides through an array</li> </ul>"},{"location":"glossary/definitions/#prefix-sum","title":"Prefix Sum","text":"<ul> <li>Array where each element is sum of all previous elements</li> </ul>"},{"location":"glossary/definitions/#suffix-sum","title":"Suffix Sum","text":"<ul> <li>Array where each element is sum of all elements after it</li> </ul>"},{"location":"glossary/definitions/#rotation","title":"Rotation","text":"<ul> <li>Shifting array elements by a certain offset</li> </ul>"},{"location":"glossary/definitions/#in-place","title":"In-place","text":"<ul> <li>Algorithm that transforms input without creating another data structure</li> </ul>"},{"location":"glossary/definitions/#anagram","title":"Anagram","text":"<ul> <li>A word created by rearranging the letters of another word or phrase, using all the original letters exactly once</li> </ul>"},{"location":"glossary/definitions/#lexicographic-order","title":"Lexicographic Order","text":"<ul> <li>Dictionary Ordering of Strings</li> </ul>"},{"location":"glossary/definitions/#heap-priority-queue","title":"Heap &amp; Priority Queue","text":""},{"location":"glossary/definitions/#min-heap-max-heap","title":"Min Heap / Max Heap","text":"<ul> <li>Tree-based data structure where parent is smaller/larger than children</li> </ul>"},{"location":"glossary/definitions/#heap-sort","title":"Heap Sort","text":"<ul> <li>Sorting algorithm using a heap</li> </ul>"},{"location":"glossary/definitions/#priority-queue","title":"Priority Queue","text":"<ul> <li>Abstract data type providing efficient access to the minimum/maximum element</li> </ul>"},{"location":"glossary/definitions/#heapify","title":"Heapify","text":"<ul> <li>Process of creating a heap from an array</li> </ul>"},{"location":"glossary/definitions/#k-way-merge","title":"K-Way Merge","text":"<ul> <li>Merging k sorted arrays/lists (often using heaps)</li> </ul>"},{"location":"glossary/definitions/#build-heap","title":"Build Heap","text":"<ul> <li>The process of running heapify() on the entire heap to create a valid heap</li> </ul>"},{"location":"glossary/definitions/#two-heaps","title":"Two Heaps","text":"<ul> <li>A technique used to find the median of a data stream using a max and a min heap</li> </ul>"},{"location":"glossary/definitions/#backtracking_1","title":"Backtracking","text":""},{"location":"glossary/definitions/#subsets","title":"Subsets","text":"<ul> <li>Set A is a subset to Set B if all of its elements are found in Set B</li> </ul>"},{"location":"glossary/definitions/#combinations","title":"Combinations","text":"<ul> <li>Number of ways of selection and arrangement of items where order does not matter</li> </ul>"},{"location":"glossary/definitions/#permutations","title":"Permutations","text":"<ul> <li>Number of ways of selection and arrangement of items where order matters</li> </ul>"},{"location":"glossary/definitions/#pruning","title":"Pruning","text":"<ul> <li>Used to eliminate branches early on that can never lead to valid solutions</li> </ul>"},{"location":"glossary/definitions/#constraint","title":"Constraint","text":"<ul> <li>A condition that must be satisfied to reach a valid solution</li> </ul>"},{"location":"glossary/definitions/#base-case","title":"Base Case","text":"<ul> <li>Determines when a valid solution has been found</li> </ul>"},{"location":"glossary/definitions/#candidate-solution","title":"Candidate Solution","text":"<ul> <li>Start from the final problem and recursively break it into smaller subproblems</li> </ul>"},{"location":"glossary/definitions/#unique-combination","title":"Unique Combination","text":"<ul> <li>Two combinations are unique if the frequency of chosen numbers is not the same</li> </ul>"},{"location":"glossary/definitions/#dynamic-programming_1","title":"Dynamic Programming","text":""},{"location":"glossary/definitions/#memoization","title":"Memoization","text":"<ul> <li>Cache technique to avoid redundant calculations</li> </ul>"},{"location":"glossary/definitions/#tabulation","title":"Tabulation","text":"<ul> <li>Bottom-up approach using arrays to store subproblem results</li> </ul>"},{"location":"glossary/definitions/#state","title":"State","text":"<ul> <li>Snapshot of progress you've made in solving the larger problem</li> </ul>"},{"location":"glossary/definitions/#overlapping-subproblems","title":"Overlapping Subproblems","text":"<ul> <li>When the same subproblems are solved multiple times</li> </ul>"},{"location":"glossary/definitions/#1-dimensional","title":"1-Dimensional","text":"<ul> <li>The result for the current state only depends on one previous state or a linear history, e.g. Fib</li> </ul>"},{"location":"glossary/definitions/#2-dimensional","title":"2-Dimensional","text":"<ul> <li>The problem depends on two varying factors, often two strings, two sequences, or two indices</li> </ul>"},{"location":"glossary/definitions/#top-down","title":"Top Down","text":"<ul> <li>Start from the final problem and recursively break it into smaller subproblems</li> </ul>"},{"location":"glossary/definitions/#bottom-up","title":"Bottom Up","text":"<ul> <li>Build the solution from the base case all the way up to the final solution</li> </ul>"},{"location":"glossary/definitions/#longest-common-subsequence-lcs","title":"Longest Common Subsequence (LCS)","text":"<ul> <li>Finding the longest subsequence common to two sequences</li> </ul>"},{"location":"glossary/definitions/#longest-increasing-subsequence-lis","title":"Longest Increasing Subsequence (LIS)","text":"<ul> <li>Finding the longest subsequence where elements are in ascending order</li> </ul>"},{"location":"glossary/definitions/#0-1-knapsack","title":"0 / 1 Knapsack","text":"<ul> <li>Each item can be picked at most once</li> </ul>"},{"location":"glossary/definitions/#unbounded-knapsack","title":"Unbounded Knapsack","text":"<ul> <li>Each item can be picked unlimited times</li> </ul>"},{"location":"glossary/definitions/#tree","title":"Tree","text":""},{"location":"glossary/definitions/#binary-tree","title":"Binary Tree","text":"<ul> <li>Tree where each node has atmost two children</li> </ul>"},{"location":"glossary/definitions/#binary-search-tree-bst","title":"Binary Search Tree (BST)","text":"<ul> <li>Binary tree where left child value &lt; parent value &lt; right child value</li> </ul>"},{"location":"glossary/definitions/#complete-binary-tree","title":"Complete Binary Tree","text":"<ul> <li>Every level filled except possibly last, which is filled left to right</li> </ul>"},{"location":"glossary/definitions/#perfect-binary-tree","title":"Perfect Binary Tree","text":"<ul> <li>All internal nodes have exactly two children and all leaf nodes are at same level</li> </ul>"},{"location":"glossary/definitions/#balanced-tree","title":"Balanced Tree","text":"<ul> <li>Height difference between left and right subtrees is limited and (often \\(\\leq\\) 1)</li> </ul>"},{"location":"glossary/definitions/#self-balancing-tree","title":"Self Balancing Tree","text":"<ul> <li>Automatically maintains balance after insertions/deletions (e.g., AVL, Red-Black)</li> </ul>"},{"location":"glossary/definitions/#traversal","title":"Traversal","text":"<ul> <li>Methods to visit all nodes (preorder, inorder, postorder, level-order)</li> </ul>"},{"location":"glossary/definitions/#lowest-common-ancestor-lca","title":"Lowest Common Ancestor (LCA)","text":"<ul> <li>Deepest node that is an ancestor of two given nodes</li> </ul>"},{"location":"glossary/definitions/#serialization-deserialization","title":"Serialization/ Deserialization","text":"<ul> <li> <p>Converting a tree to/from a string representation</p> </li> <li> <p>Serialization: Converting a tree to a string.</p> </li> <li> <p>Deserialization: Converting a string back into a tree</p> </li> <li> <p>Example: \"1, 2, 4, null, null, 5, null, null, 3, null, null\", where null indicates a null node.</p> </li> </ul>"},{"location":"glossary/definitions/#diameter","title":"Diameter","text":"<ul> <li>Longest path between any two nodes in a tree, not necessarily through the root.</li> </ul>"},{"location":"glossary/definitions/#level-order","title":"Level Order","text":"<ul> <li>Processing tree nodes level by level</li> </ul>"},{"location":"glossary/definitions/#segment-tree","title":"Segment Tree","text":"<ul> <li>Data structure for range queries</li> </ul>"},{"location":"glossary/definitions/#bfs-breadth-first-search-aka-level-order-traversal","title":"BFS (Breadth First Search) aka Level Order Traversal","text":"<ul> <li>Traversing the tree nodes level by level, often using a queue.</li> </ul>"},{"location":"glossary/definitions/#dfs-depth-first-search","title":"DFS (Depth First Search)","text":"<ul> <li> <p>Traversing the tree in a depth-first manner</p> </li> <li> <p>Visits nodes by exploring depth-first. Comes in three orders:</p> </li> <li> <p>Preorder: node \u2192 left \u2192 right (NLR)</p> </li> <li>Inorder: left \u2192 node \u2192 right (LNR)</li> <li>Postorder: left \u2192 right \u2192 node (LRN)</li> </ul>"},{"location":"glossary/definitions/#graphs","title":"Graphs","text":""},{"location":"glossary/definitions/#directed-undirected","title":"Directed / Undirected","text":"<ul> <li>Edges with/without direction</li> </ul>"},{"location":"glossary/definitions/#weighted-unweighted","title":"Weighted / Unweighted","text":"<ul> <li>Edges with/without values - known as weights</li> </ul>"},{"location":"glossary/definitions/#connected-component","title":"Connected Component","text":"<ul> <li>Subset of vertices where any two vertices are connected by a path</li> </ul>"},{"location":"glossary/definitions/#strongly-connected-component-scc","title":"Strongly Connected Component (SCC)","text":"<ul> <li>In a directed graph, subset where every vertex is reachable from every other</li> </ul>"},{"location":"glossary/definitions/#bipartite-graph","title":"Bipartite Graph","text":"<ul> <li>Can be divided into two sets with no edges within each set</li> </ul>"},{"location":"glossary/definitions/#dag-directed-acyclic-graph","title":"DAG (Directed Acyclic Graph)","text":"<ul> <li>Directed graph with no cycles</li> </ul>"},{"location":"glossary/definitions/#topological-sort","title":"Topological Sort","text":"<ul> <li>Linear ordering of vertices where for every edge (u,v), u comes before v. Works with DAGs</li> </ul>"},{"location":"glossary/definitions/#adjacency-list","title":"Adjacency List","text":"<ul> <li>Graph representation derived from an array of edges</li> </ul>"},{"location":"glossary/definitions/#bfsdfs","title":"BFS/DFS","text":"<ul> <li>Breadth-First Search and Depth-First Search traversal strategies</li> </ul>"},{"location":"glossary/definitions/#mst-minimum-spanning-tree","title":"MST (Minimum Spanning Tree)","text":"<ul> <li>Tree connecting all vertices with minimum total edge weight</li> </ul>"},{"location":"glossary/definitions/#bellman-ford-dijkstra-floyd-warshall","title":"Bellman-Ford / Dijkstra / Floyd-Warshall","text":"<ul> <li>Shortest path algorithms</li> </ul>"},{"location":"glossary/definitions/#union-find","title":"Union-Find","text":"<ul> <li>Data structure for disjoint sets operations</li> </ul>"},{"location":"glossary/definitions/#cycle-detection","title":"Cycle Detection","text":"<ul> <li>Algorithms to find cycles in graphs</li> </ul>"},{"location":"glossary/definitions/#a-algorithm","title":"A* Algorithm","text":"<ul> <li>Best-first search algorithm for path finding</li> </ul>"},{"location":"glossary/definitions/#miscellaneous","title":"Miscellaneous","text":""},{"location":"glossary/definitions/#amortized-analysis","title":"Amortized Analysis","text":"<ul> <li>Analyzing average performance over a sequence of operations</li> </ul>"},{"location":"glossary/definitions/#randomized-algorithm","title":"Randomized Algorithm","text":"<ul> <li>Algorithm that uses random numbers to decide next step</li> </ul>"},{"location":"glossary/definitions/#skip-list","title":"Skip List","text":"<ul> <li>Probabilistic data structure for efficient search</li> </ul>"},{"location":"glossary/definitions/#execution-time","title":"Execution Time","text":"<ul> <li>The raw time taken in seconds to execute an algorithm</li> </ul>"},{"location":"glossary/definitions/#stable-sorting-algorithm","title":"Stable Sorting Algorithm","text":"<ul> <li>A sorting algorithm that maintains the relative order of elements after sorting</li> </ul>"},{"location":"glossary/definitions/#unstable-sorting-algorithm","title":"Unstable Sorting Algorithm","text":"<ul> <li>A sorting algorithm that does not maintain the relative order of elements after sorting</li> </ul>"},{"location":"glossary/style-guide/","title":"Style Guide","text":"Akhil Singh Chauhan                          Creator"},{"location":"glossary/style-guide/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Class: UpperCamelCase</li> <li>Function: lowerCamelCase</li> <li>Variable: lower_snake_case</li> <li>Constant: UPPER_SNAKE_CASE</li> </ul>"},{"location":"glossary/style-guide/#examples","title":"Examples","text":"Python <pre><code># Class\nclass YourClass:\n  pass\n\n# Function\ndef yourFunction(param: int) -&gt; None:\n  pass\n\n# Variable\nyour_variable = 0\n\n# Constant\nK_MOD = 1_000_000_009\n</code></pre>"},{"location":"optimizations/1/","title":"1. Mixed Integer Programming","text":"","tags":["MIP","LP"]},{"location":"optimizations/1/#1-mixed-integer-programming","title":"1. Mixed Integer Programming","text":"<p>Easy</p>","tags":["MIP","LP"]},{"location":"optimizations/1/#description","title":"Description","text":"<p>Formulate and solve the following simple MIP model:</p> <pre><code>Maximize\n    x + y + 2z\n\nsubject to constraints\n    x + 2y + 3z &lt;= 4\n    x +  y      &gt;= 1\n    x, y, z binary\n</code></pre>","tags":["MIP","LP"]},{"location":"optimizations/1/#test-your-code","title":"\ud83d\ude80 Test your code","text":"<p>Try to solve the problem below in the code editor before reading the solution.</p>","tags":["MIP","LP"]},{"location":"optimizations/1/#results","title":"Results","text":"View Result <pre><code>Objective value: 3.0\nx: 1.0\ny: 0.0\nz: 1.0\n</code></pre>","tags":["MIP","LP"]},{"location":"optimizations/1/#solutions","title":"Solutions","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["MIP","LP"]},{"location":"optimizations/2/","title":"2. Mermaid Examples","text":"<pre><code>flowchart LR\n\n    classDef smallNod2 fill:#f9f,stroke:#333,stroke-width:2px,width:500px,height:500px,font-size:260pt;\n\n    A((A)):::smallNode2\n    B((B)):::smallNode2\n    C((C)):::smallNode2\n\n    A---|This is the text|B\n    A--&gt;|text1|B\n    A-- text2 --&gt;B\n    A ----|text3| B\n    A -- text4 --&gt; B -- text1 --&gt; C\n    A-- This is the text6! ---B\n    B &lt;--text2--&gt; C\n    B e1@==&gt; C\n    e1@{ animate: true, animation: slow }</code></pre> <pre><code>%%{init: { 'flowchart': { 'curve': 'linear','htmlLabels': true } } }%%\ngraph LR\n    classDef smallNode fill:#f9f,stroke:#333,stroke-width:2px;\n\n    style 1 fill:#f9f,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 2 fill:#ccf,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 3 fill:#f9f,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 4 fill:#ccf,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 5 fill:#f9f,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 6 fill:#ccf,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 7 fill:#f9f,stroke:#333,stroke-width:2px, width:500px, height:500px\n    style 8 fill:#ccf,stroke:#333,stroke-width:2px, width:500px, height:500px\n\n    1((\"  1  \"))\n    2((\"  2  \"))\n    3((3))\n    4((4))\n    5((5))\n    6((6))\n    7((7))\n    8((8))\n\n    1----|30| 2\n    1---|24| 4\n    1----|25| 5\n\n    2----|27| 3\n    2---|28| 4\n    2----|27| 6\n\n    3----|30| 7\n    3-----|26| 6\n\n    4---|29| 5\n    4---|21| 6\n\n    5---|30| 6\n    5-----|30| 8\n\n    6---|28| 7\n    6---|36| 8\n\n    7-----|25| 8</code></pre> <pre><code>flowchart LR\n  A e4@==&gt; B\n  classDef animate stroke-dasharray: 9,5,stroke-dashoffset: 900,animation: dash 25s linear infinite;\n  class e4 animate</code></pre>"},{"location":"optimizations/2/#depot-locations","title":"Depot Locations","text":"<pre><code>flowchart LR\n    D1[\"Depot 1\"]\n    D2[\"Depot 2\"]\n    D3[\"Depot 3\"]\n    D4[\"Depot 4\"]\n    D5[\"Depot 5\"]\n    D6[\"Depot 6\"]\n    D7[\"Depot 7\"]\n    D8[\"Depot 8\"]\n    D9[\"Depot 9\"]\n    D10[\"Depot 10\"]\n    D11[\"Depot 11\"]\n    D12[\"Depot 12\"]\n    C1[\"Customer 1\"]\n    C2[\"Customer 2\"]\n    C3[\"Customer 3\"]\n    C4[\"Customer 4\"]\n    C5[\"Customer 5\"]\n    C6[\"Customer 6\"]\n    C7[\"Customer 7\"]\n    C8[\"Customer 8\"]\n    C9[\"Customer 9\"]\n    C10[\"Customer 10\"]\n    C11[\"Customer 11\"]\n    C12[\"Customer 12\"]\n    D1 ---&gt;|5.0 tons| C2\n    D1 ---&gt;|75.0 tons| C3\n    D1 ---&gt;|100.0 tons| C4\n    D1 ---&gt;|120.0 tons| C12\n    D5 ---&gt;|120.0 tons| C1\n    D5 ---&gt;|40.0 tons| C2\n    D8 ---&gt;|35.0 tons| C2\n    D8 ---&gt;|100.0 tons| C6\n    D8 ---&gt;|85.0 tons| C10\n    D9 ---&gt;|110.0 tons| C5\n    D9 ---&gt;|65.0 tons| C10\n    D9 ---&gt;|95.0 tons| C11\n    D12 ---&gt;|90.0 tons| C7\n    D12 ---&gt;|60.0 tons| C8\n    D12 ---&gt;|30.0 tons| C9</code></pre>"},{"location":"optimizations/2/#dp","title":"DP","text":"<pre><code>  %%{init: {'theme': 'default', 'flowchart': {'curve': 'monotoneY'}}}%%\n  flowchart TD\n      subgraph Step1[\"Step 1: Start with Original Problem\"]\n          A[Original Problem]\n      end\n\n      subgraph Step2[\"Step 2: Check if Subproblem is Solved\"]\n          B{Is Subproblem Solved?}\n      end\n\n      subgraph Step3[\"Step 3: If No - Break into Subproblems\"]\n          C[Break Down into Subproblems]\n          D[Solve Subproblem]\n          E[Store Solution in Memory]\n      end\n\n      subgraph Step4[\"Step 4: If Yes or After Storing - Use Stored Solution\"]\n          F[Use Stored Solution]\n      end\n\n      subgraph Step5[\"Step 5: Solve Original Problem Efficiently\"]\n          G[Solve Original Problem Efficiently]\n      end\n\n      A --&gt; B\n      B -- \"No\" --&gt; C\n      C --&gt; D\n      D --&gt; E\n      E --&gt; F\n      B -- \"Yes\" --&gt; F\n      F --&gt; G\n\n      %% Animation Hints via click\n      click A \"javascript:void(0)\" \"Start with the main problem\"\n      click B \"javascript:void(0)\" \"Check if subproblem was solved\"\n      click C \"javascript:void(0)\" \"Divide into overlapping subproblems\"\n      click D \"javascript:void(0)\" \"Solve the required subproblem\"\n      click E \"javascript:void(0)\" \"Store the solution to avoid recomputation\"\n      click F \"javascript:void(0)\" \"Reuse stored result\"\n      click G \"javascript:void(0)\" \"Problem solved efficiently!\"</code></pre>"},{"location":"optimizations/2/#recursion","title":"Recursion","text":"<pre><code>%%{init: {\"themeVariables\": {\"fontSize\":\"18px\"}, \"flowchart\": {\"curve\": \"monotoneY\", \"nodeSpacing\": 60, \"rankSpacing\": 50, \"htmlLabels\": true, \"useMaxWidth\": true, \"animate\": true}} }%%\nflowchart LR\n    Start((Start)):::start --&gt; CallFunc{\"Is Base Case?\"}:::decision\n    CallFunc -- Yes --&gt; BaseCase([\"Return Result (Base Case)\"]):::endClass\n    CallFunc -- No --&gt; Recurse[\"Call function&lt;br&gt;again with&lt;br&gt;simpler input\"]:::recurse\n    Recurse -- Recursive Call --&gt; CallFunc\n    BaseCase --&gt; Output[\"Result unwinds&lt;br&gt;back through calls\"]:::output\n\n    classDef start fill:#9eebcf,stroke:#054c38,stroke-width:2px;\n    classDef decision fill:#ffd366,stroke:#e09f3e,stroke-width:2px;\n    classDef recurse fill:#a0c4ff,stroke:#19388a,stroke-width:2px,font-style:italic;\n    classDef endClass fill:#bdf7b7,stroke:#24581c,stroke-width:2px;\n    classDef output fill:#e9b3fd,stroke:#612796,stroke-width:2px,font-style:italic;</code></pre>"},{"location":"optimizations/2/#research-learning-resources","title":"Research, Learning Resources","text":"<ul> <li>Reference 1</li> <li>Reference 2</li> </ul>"},{"location":"optimizations/3/","title":"3. Composing flight crews","text":"","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/3/#3-composing-flight-crews","title":"3. Composing flight crews","text":"<p>Ardous</p>","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/3/#description","title":"Description","text":"<p>During the Second World War the Royal Air Force (<code>RAF</code>) had many foreign pilots speaking different languages and more or less trained on the different types of aircraft. The <code>RAF</code> had to form pilot/co-pilot pairs (<code>crews</code>) for every plane with a compatible language and a sufficiently good knowledge of the aircraft type. In our example there are eight pilots. In the following table every pilot is characterized by a mark between <code>0 (worst)</code> and <code>20 (best)</code> for his language skills (in <code>English</code>, <code>French</code>, <code>Dutch</code>, and <code>Norwegian</code>), and for his experience with different two-seater aircraft (<code>reconnaissance</code>, <code>transport</code>, <code>bomber</code>, <code>fighterbomber</code>, and <code>supply planes</code>).</p> Pilot 1 2 3 4 5 6 7 8 Language English 20 14 0 13 0 0 8 8 French 12 0 0 10 15 20 8 9 Dutch 0 20 12 0 8 11 14 12 Norwegian 0 0 0 0 17 0 0 16 Plane type Reconnaissance 1 8 12 5 0 0 8 0 Transport 10 0 9 14 15 8 12 13 Bomber 0 17 0 11 13 10 0 0 Fighter Bomber 0 0 14 0 0 12 16 0 Supply plane 0 0 0 0 12 18 0 18 <p>Table 3.1 Ratings of pilots</p> <p>A valid flight crew consists of two pilots that both have each at least <code>10/20</code> for the same language and <code>10/20</code> on the same aircraft type.</p> <p>Question 1: Is it possible to have all pilots fly?</p> <p>Subsequently, we calculate for every valid flight crew the sum of their scores for every aircraft type for which both pilots are rated at least 10/20. This allows us to define for every crew the maximum score among these marks. For example, pilots 5 and 6 have marks 13 and 10 on bombers and 12 and 18 on supply planes. The score for this crew is therefore max(13 + 10, 12 + 18) = 30.</p> <p>Question 2: Which is the set of crews with maximum total score?</p>","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/3/#test-your-code","title":"\ud83d\ude80 Test your code","text":"<p>Try to solve the problem below in the code editor before reading the solution.</p>","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/3/#results","title":"Results","text":"View Result <pre><code>Objective Value: 4\nArc (1,2): 30\nArc (3,7): 30\nArc (4,5): 29\nArc (6,8): 36\nCrew Score 125.0\n</code></pre>","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/3/#answer","title":"Answer \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["MIP","Air Transport","Optimization"]},{"location":"optimizations/4/","title":"4. N Queen","text":"","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/4/#4-n-queen","title":"4. N Queen","text":"<p>Ardous</p>","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/4/#description","title":"Description","text":"<p>The N-Queens problem is a classic constraint satisfaction problem in computer science and mathematics. Given an <code>N x N</code> chessboard, the challenge is to place <code>N</code> queens such that no two queens attack each other. Queens can attack horizontally, vertically, and diagonally.</p> <p></p> <p>Constraints:</p> <ul> <li><code>1 &lt;= N &lt;= 20</code></li> <li>Each queen must be placed such that no two queens can attack each other</li> </ul>","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/4/#test-your-code","title":"\ud83d\ude80 Test your code","text":"<p>Try to solve the problem below in the code editor before reading the solution.</p>","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/4/#results","title":"Results","text":"View Result <pre><code>For N = 8: 92 solutions found\nFor N = 12: 14200 solutions found\nFor N = 16: 14772512 solutions found\n\nExample solution for N = 8:\nQueen positions: [(1,1), (2,5), (3,8), (4,6), (5,3), (6,7), (7,2), (8,4)]\n</code></pre> <p>Board visualization: <pre><code>block-beta\n    columns 8\n    Q1[\"\u265b\"]:1\n    E2[\" \"]:1\n    E3[\" \"]:1\n    E4[\" \"]:1\n    E5[\" \"]:1\n    E6[\" \"]:1\n    E7[\" \"]:1\n    E8[\" \"]:1\n\n    F1[\" \"]:1\n    F2[\" \"]:1\n    F3[\" \"]:1\n    F4[\" \"]:1\n    Q2[\"\u265b\"]:1\n    F6[\" \"]:1\n    F7[\" \"]:1\n    F8[\" \"]:1\n\n    G1[\" \"]:1\n    G2[\" \"]:1\n    G3[\" \"]:1\n    G4[\" \"]:1\n    G5[\" \"]:1\n    G6[\" \"]:1\n    G7[\" \"]:1\n    Q3[\"\u265b\"]:1\n\n    H1[\" \"]:1\n    H2[\" \"]:1\n    H3[\" \"]:1\n    H4[\" \"]:1\n    H5[\" \"]:1\n    Q4[\"\u265b\"]:1\n    H7[\" \"]:1\n    H8[\" \"]:1\n\n    I1[\" \"]:1\n    I2[\" \"]:1\n    Q5[\"\u265b\"]:1\n    I4[\" \"]:1\n    I5[\" \"]:1\n    I6[\" \"]:1\n    I7[\" \"]:1\n    I8[\" \"]:1\n\n    J1[\" \"]:1\n    J2[\" \"]:1\n    J3[\" \"]:1\n    J4[\" \"]:1\n    J5[\" \"]:1\n    J6[\" \"]:1\n    Q6[\"\u265b\"]:1\n    J8[\" \"]:1\n\n    K1[\" \"]:1\n    Q7[\"\u265b\"]:1\n    K3[\" \"]:1\n    K4[\" \"]:1\n    K5[\" \"]:1\n    K6[\" \"]:1\n    K7[\" \"]:1\n    K8[\" \"]:1\n\n    L1[\" \"]:1\n    L2[\" \"]:1\n    L3[\" \"]:1\n    Q8[\"\u265b\"]:1\n    L5[\" \"]:1\n    L6[\" \"]:1\n    L7[\" \"]:1\n    L8[\" \"]:1\n\n    classDef queen fill:#ff6b6b,stroke:#333,stroke-width:2px,color:#fff\n    classDef empty fill:#f9f9f9,stroke:#ddd,stroke-width:1px\n\n    class Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8 queen</code></pre></p>","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/4/#answer","title":"Answer \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["MIP","Matrix","Optimization"]},{"location":"optimizations/5/","title":"5. GraphViz Examples","text":""},{"location":"optimizations/5/#example-1","title":"Example 1","text":"<ol> <li><code>splines=false</code> doesn't work well with labels - it often causes unexpected behavior</li> <li><code>splines=line</code> is better for straight edges with labels</li> <li>The layout engine (dot, neato, fdp, etc.) significantly affects how edges are drawn</li> <li>Increasing <code>nodesep</code> and <code>ranksep</code> gives more space for straight edges</li> <li>Using <code>labelfloat=true</code> can help position labels better</li> </ol> <p>G11221--2441--4551--5332--32--4662--63--6773--74--54--65--6885--86--76--87--825</p> <ul> <li><code>nodesep</code> for horizontal spacing</li> <li><code>ranksep</code> for more vertical spacing</li> <li><code>len</code> values for longer individual edges</li> </ul>"},{"location":"optimizations/5/#example-2","title":"Example 2","text":"<p>G11221--230441--424551--5252--428332--327662--6274--5294--6215--630885--8303--626773--7306--7286--8367--825</p>"},{"location":"optimizations/5/#depot-transactions","title":"Depot Transactions","text":"<p>DepotTransactionsD1Depot 1C2Customer 2D1-&gt;C25.0 tonsC3Customer 3D1-&gt;C375.0 tonsC4Customer 4D1-&gt;C4100.0 tonsC12Customer 12D1-&gt;C12120.0 tonsD2Depot 2D3Depot 3D4Depot 4D5Depot 5C1Customer 1D5-&gt;C1120.0 tonsD5-&gt;C240.0 tonsD6Depot 6D7Depot 7D8Depot 8D8-&gt;C235.0 tonsC6Customer 6D8-&gt;C6100.0 tonsC10Customer 10D8-&gt;C1085.0 tonsD9Depot 9C5Customer 5D9-&gt;C5110.0 tonsD9-&gt;C1065.0 tonsC11Customer 11D9-&gt;C1195.0 tonsD10Depot 10D11Depot 11D12Depot 12C7Customer 7D12-&gt;C790.0 tonsC8Customer 8D12-&gt;C860.0 tonsC9Customer 9D12-&gt;C930.0 tons</p>"},{"location":"optimizations/5/#research-learning-resources","title":"Research, Learning Resources","text":"<ul> <li>Reference 1</li> <li>Reference 2</li> <li>Reference 3</li> <li>Reference 4</li> <li>Reference 5</li> <li>Reference 6</li> <li>Reference 7</li> <li>Plugin Reference 1</li> <li>Plugin Reference 2</li> <li>Plugin Reference 3</li> <li>Plugin Reference 4</li> <li>Graph Reference</li> </ul>"},{"location":"optimizations/6/","title":"6. Depot Location","text":"","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#6-depot-location","title":"6. Depot Location","text":"<p>Ardous</p>","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#description","title":"Description","text":"<p>A large company wishes to open new depots to deliver to its sales centers. Every new set-up of a depot has a fixed cost. Goods are delivered from a depot to the sales centers close to the site. Every delivery has a cost that depends on the distance covered. The two sorts of cost are quite different: set-up costs are capital costs which may usually be written off over several years, and transport costs are operating costs. A detailed discussion of how to combine these two costs is beyond the scope of this scenario \u2014 we assume here that they have been put on some comparable basis, perhaps by taking the costs over a year.</p> <p>There are 12 sites available for the construction of new depots and 12 sales centers need to receive deliveries from these depots.</p> <p>The following Table 6.1 gives the costs (in thousand $) of satisfying the entire demand of each customer (sales center) from a depot (not the unit costs). So, for instance, the cost per unit of supplying customer 9 (who has a total demand of 30 tonnes according to Table 6.3) from depot 1 is $60000/30t, i.e. $2000/t. Certain deliveries that are impossible are marked with the infinity symbol \\(\u221e\\).</p> <p>Table 6.1: Delivery costs for satisfying entire demand of customers</p> Customer Depot 1 2 3 4 5 6 7 8 9 10 11 12 1 100 80 50 50 60 100 120 90 60 70 65 110 2 120 90 60 70 65 110 140 110 80 80 75 130 3 140 110 80 80 75 130 160 125 100 100 80 150 4 160 125 100 100 80 150 190 150 130 \u221e \u221e \u221e 5 190 150 130 \u221e \u221e \u221e 200 180 150 \u221e \u221e \u221e 6 200 180 150 \u221e \u221e \u221e 100 80 50 50 60 100 7 100 80 50 50 60 100 120 90 60 70 65 110 8 120 90 60 70 65 110 140 110 80 80 75 130 9 140 110 80 80 75 130 160 125 100 100 80 150 10 160 125 100 100 80 150 190 150 130 \u221e \u221e \u221e 11 190 150 130 \u221e \u221e \u221e 200 180 150 \u221e \u221e \u221e 12 200 180 150 \u221e \u221e \u221e 100 80 50 50 60 100 <p>In addition, for every depot we have the following information: the fixed cost for constructing the depot that needs to be included into the objective function and its capacity limit, all listed in Table 6.2</p> <p>Table 6.2: Fix costs and capacity limits of the depot locations</p> Depot 1 2 3 4 5 6 7 8 9 10 11 12 Cost(k$) 3500 9000 10000 4000 3000 9000 9000 3000 4000 10000 9000 3500 Capacity(t) 300 250 100 180 275 300 200 220 270 250 230 180 <p>The quantities demanded by the sales centers (customers), are summarized in the following table.</p> <p>Table 6.3: Demand data</p> Customer 1 2 3 4 5 6 7 8 9 10 11 12 Demand(t) 120 80 75 100 110 100 90 60 30 150 95 120 <p>In every case, the demand of a customer needs to be satisfied but a sales center may be delivered to from several depots.</p> <p>Which depots should be opened to minimize the total cost of construction and of delivery, whilst satisfying all demands?</p>","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#test-your-code","title":"\ud83d\ude80 Test your code","text":"<p>Try to solve the problem below in the code editor before reading the solution.</p>","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#results","title":"Results","text":"View Result <pre><code>Total Minimum Cost = $18103\n</code></pre>","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#depot-transactions","title":"Depot Transactions","text":"<pre><code>flowchart TD\n    D1[\"Depot 1\"]\n    D2[\"Depot 2\"]\n    D3[\"Depot 3\"]\n    D4[\"Depot 4\"]\n    D5[\"Depot 5\"]\n    D6[\"Depot 6\"]\n    D7[\"Depot 7\"]\n    D8[\"Depot 8\"]\n    D9[\"Depot 9\"]\n    D10[\"Depot 10\"]\n    D11[\"Depot 11\"]\n    D12[\"Depot 12\"]\n    C1[\"Customer 1\"]\n    C2[\"Customer 2\"]\n    C3[\"Customer 3\"]\n    C4[\"Customer 4\"]\n    C5[\"Customer 5\"]\n    C6[\"Customer 6\"]\n    C7[\"Customer 7\"]\n    C8[\"Customer 8\"]\n    C9[\"Customer 9\"]\n    C10[\"Customer 10\"]\n    C11[\"Customer 11\"]\n    C12[\"Customer 12\"]\n\n    D1 e1@==&gt;|5.0 tons| C2\n    e1@{ animate: true, animation: slow }\n    D1 e2@==&gt;|75.0 tons| C3\n    e2@{ animate: true, animation: slow }\n    D1 e3@==&gt;|100.0 tons| C4\n    e3@{ animate: true, animation: slow }\n    D1 e4@==&gt;|120.0 tons| C12\n    e4@{ animate: true, animation: slow }\n    D5 e5@==&gt;|120.0 tons| C1\n    e5@{ animate: true, animation: slow }\n    D5 e6@==&gt;|40.0 tons| C2\n    e6@{ animate: true, animation: slow }\n    D8 e7@==&gt;|35.0 tons| C2\n    e7@{ animate: true, animation: slow }\n    D8 e8@==&gt;|100.0 tons| C6\n    e8@{ animate: true, animation: slow }\n    D8 e9@==&gt;|85.0 tons| C10\n    e9@{ animate: true, animation: slow }\n    D9 e10@==&gt;|110.0 tons| C5\n    e10@{ animate: true, animation: slow }\n    D9 e11@==&gt;|65.0 tons| C10\n    e11@{ animate: true, animation: slow }\n    D9 e12@==&gt;|95.0 tons| C11\n    e12@{ animate: true, animation: slow }\n    D12 e13@==&gt;|90.0 tons| C7\n    e13@{ animate: true, animation: slow }\n    D12 e14@==&gt;|60.0 tons| C8\n    e14@{ animate: true, animation: slow }\n    D12 e15@==&gt;|30.0 tons| C9\n    e15@{ animate: true, animation: slow }</code></pre>","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/6/#answer","title":"Answer \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["MIP","Ground Transport","Optimization"]},{"location":"optimizations/7/","title":"More Optimization Problems Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/1/","title":"1. Two Sum","text":"","tags":["Grind 169","Array","Hash Table","Interview Master 100"]},{"location":"problems/1/#1-two-sum","title":"1. Two Sum","text":"<p>Easy</p>","tags":["Grind 169","Array","Hash Table","Interview Master 100"]},{"location":"problems/1/#description","title":"Description","text":"<p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return indices of the two numbers such that they add up to <code>target</code>.</p> <p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p> <p>You can return the answer in any order.</p> <p>Example 1:</p> <pre><code>Input: nums = [2,7,11,15], target = 9\nOutput: [0, 1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\n</code></pre> <p>Example 2:</p> <pre><code>Input: nums = [3,2,4], target = 6\nOutput: [1, 2]\n</code></pre> <p>Example 3:</p> <pre><code>Input: nums = [3,3], target = 6\nOutput: [0, 1]\n</code></pre> <p>Constraints:</p> <ul> <li><code>2 &lt;= nums.length &lt;= 104</code></li> <li><code>-109 &lt;= nums[i] &lt;= 109</code></li> <li><code>-109 &lt;= target &lt;= 109</code></li> <li><code>Only one valid answer exists.</code></li> </ul> <p>Follow-up: Can you come up with an algorithm that is less than \\(O(n^2)\\) time complexity?</p>","tags":["Grind 169","Array","Hash Table","Interview Master 100"]},{"location":"problems/1/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Grind 169","Array","Hash Table","Interview Master 100"]},{"location":"problems/1095/","title":"1095. Find in Mountain Array","text":"","tags":["Array","Binary Search","Interactive"]},{"location":"problems/1095/#1095-find-in-mountain-array","title":"1095. Find in Mountain Array","text":"<p>Hard</p>","tags":["Array","Binary Search","Interactive"]},{"location":"problems/1095/#description","title":"Description","text":"<p>(This problem is an interactive problem.)</p> <p>You may recall that an array arr is a mountain array if and only if:</p> <ul> <li><code>arr.length &gt;= 3</code></li> <li>There exists some i with <code>0 &lt; i &lt; arr.length - 1</code> such that:</li> <li><code>arr[0] &lt; arr[1] &lt; ... &lt; arr[i - 1] &lt; arr[i]</code></li> <li><code>arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code></li> </ul> <p>Given a mountain array <code>mountainArr</code>, return the minimum <code>index</code> such that <code>mountainArr.get(index) == target</code>. If such an <code>index</code> does not exist, return <code>-1</code>.</p> <p>You cannot access the mountain array directly. You may only access the array using a <code>MountainArray</code> interface:</p> <ul> <li><code>MountainArray.get(k)</code> returns the element of the array at index <code>k</code> (0-indexed).</li> <li><code>MountainArray.length()</code> returns the length of the array.</li> </ul> <p>Submissions making more than <code>100</code> calls to <code>MountainArray.get</code> will be judged Wrong Answer. Also, any solutions that attempt to circumvent the judge will result in disqualification.</p> <p>Example 1:</p> <pre><code>Input: mountainArr = [1,2,3,4,5,3,1], target = 3\nOutput: 2\nExplanation: 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.\n</code></pre> <p>Example 2:</p> <pre><code>Input: mountainArr = [0,1,2,4,2,1], target = 3\nOutput: -1\nExplanation: 3 does not exist in the array, so we return -1.\n</code></pre> <p>Constraints:</p> <ul> <li><code>3 &lt;= mountainArr.length() &lt;= 104</code></li> <li><code>0 &lt;= target &lt;= 109</code></li> <li><code>0 &lt;= mountainArr.get(index) &lt;= 109</code></li> </ul>","tags":["Array","Binary Search","Interactive"]},{"location":"problems/1095/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Binary Search","Interactive"]},{"location":"problems/135/","title":"135. Candy","text":"","tags":["Array","Greedy"]},{"location":"problems/135/#135-candy","title":"135. Candy","text":"<p>Hard</p>","tags":["Array","Greedy"]},{"location":"problems/135/#description","title":"Description","text":"<p>There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.</p> <p>You are giving candies to these children subjected to the following requirements:</p> <ul> <li>Each child must have at least one candy.</li> <li>Children with a higher rating get more candies than their neighbors.</li> </ul> <p>Return the minimum number of candies you need to have to distribute the candies to the children.</p> <p>Example 1:</p> <pre><code>Input: ratings = [1,0,2]\nOutput: 5\nExplanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n</code></pre> <p>Example 2:</p> <pre><code>Input: ratings = [1,2,2]\nOutput: 4\nExplanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\nThe third child gets 1 candy because it satisfies the above two conditions.\n</code></pre> <p>Constraints:</p> <ul> <li><code>n == ratings.length</code></li> <li><code>1 &lt;= n &lt;= 2 * 104</code></li> <li><code>0 &lt;= ratings[i] &lt;= 2 * 104</code></li> </ul>","tags":["Array","Greedy"]},{"location":"problems/135/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Greedy"]},{"location":"problems/139/","title":"139. Word Break","text":"","tags":["Array","Hash Table","String","Dynamic Programming","Trie","Memoization"]},{"location":"problems/139/#139-word-break","title":"139. Word Break","text":"<p>Medium</p>","tags":["Array","Hash Table","String","Dynamic Programming","Trie","Memoization"]},{"location":"problems/139/#description","title":"Description","text":"<p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, return <code>true</code> if <code>s</code> can be segmented into a space-separated sequence of one or more dictionary words.</p> <p>Note that the same word in the dictionary may be reused multiple times in the segmentation.</p> <p>Example 1:</p> <pre><code>Input: s = \"leetcode\", wordDict = [\"leet\",\"code\"]\nOutput: true\nExplanation: Return true because \"leetcode\" can be segmented as \"leet code\".\n</code></pre> <p>Example 2:</p> <pre><code>Input: s = \"applepenapple\", wordDict = [\"apple\",\"pen\"]\nOutput: true\nExplanation: Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\nNote that you are allowed to reuse a dictionary word.\n</code></pre> <p>Example 3:</p> <pre><code>Input: s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]\nOutput: false\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= s.length &lt;= 300</code></li> <li><code>1 &lt;= wordDict.length &lt;= 1000</code></li> <li><code>1 &lt;= wordDict[i].length &lt;= 20</code></li> <li><code>s and wordDict[i] consist of only lowercase English letters.</code></li> <li><code>All the strings of wordDict are unique.</code></li> </ul>","tags":["Array","Hash Table","String","Dynamic Programming","Trie","Memoization"]},{"location":"problems/139/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Hash Table","String","Dynamic Programming","Trie","Memoization"]},{"location":"problems/19/","title":"19. Remove Nth Node From End of List","text":"","tags":["Interview Master 100","Linked List","Two Pointers"]},{"location":"problems/19/#19-remove-nth-node-from-end-of-list","title":"19. Remove Nth Node From End of List","text":"<p>Medium</p>","tags":["Interview Master 100","Linked List","Two Pointers"]},{"location":"problems/19/#description","title":"Description","text":"<p>Given the <code>head</code> of a linked list, remove the n<sup>th</sup> node from the end of the list and return its head.</p> <p>Example 1:</p> <p></p> <pre><code>Input: head = [1,2,3,4,5], n = 2\nOutput: [1, 2, 3, 5]\n</code></pre> <p>Example 2:</p> <pre><code>Input: head = [1], n = 1\nOutput: []\n</code></pre> <p>Example 3:</p> <pre><code>Input: head = [1,2], n = 1\nOutput: [1]\n</code></pre> <p>Constraints:</p> <ul> <li><code>The number of nodes in the list is sz.</code></li> <li><code>1 &lt;= sz &lt;= 30</code></li> <li><code>0 &lt;= Node.val &lt;= 100</code></li> <li><code>1 &lt;= n &lt;= sz</code></li> </ul> <p>Follow up: Could you do this in one pass?</p>","tags":["Interview Master 100","Linked List","Two Pointers"]},{"location":"problems/19/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Linked List","Two Pointers"]},{"location":"problems/2/","title":"2. Add Two Numbers","text":"","tags":["Interview Master 100","Grind 169","Linked List","Math","Recursion"]},{"location":"problems/2/#2-add-two-numbers","title":"2. Add Two Numbers","text":"<p>Medium</p>","tags":["Interview Master 100","Grind 169","Linked List","Math","Recursion"]},{"location":"problems/2/#description","title":"Description","text":"<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p> <p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p> <p>Example 1:</p> <p></p> <pre><code>Input: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7, 0, 8]\nExplanation: 342 + 465 = 807.\n</code></pre> <p>Example 2:</p> <pre><code>Input: l1 = [0], l2 = [0]\nOutput: [0]\n</code></pre> <p>Example 3:</p> <pre><code>Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\nOutput: [8, 9, 9, 9, 0, 0, 0, 1]\n</code></pre> <p>Constraints:</p> <ul> <li><code>The number of nodes in each linked list is in the range [1, 100].</code></li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li><code>It is guaranteed that the list represents a number that does not have leading zeros.</code></li> </ul>","tags":["Interview Master 100","Grind 169","Linked List","Math","Recursion"]},{"location":"problems/2/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Grind 169","Linked List","Math","Recursion"]},{"location":"problems/20/","title":"20. Valid Parentheses","text":"","tags":["String","Stack","Interview Master 100"]},{"location":"problems/20/#20-valid-parentheses","title":"20. Valid Parentheses","text":"<p>Easy</p>","tags":["String","Stack","Interview Master 100"]},{"location":"problems/20/#description","title":"Description","text":"<p>Given a string s containing just the characters <code>'('</code>, <code>')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>, determine if the input string is valid.</p> <p>An input string is valid if:</p> <ol> <li>Open brackets must be closed by the same type of brackets.</li> <li>Open brackets must be closed in the correct order.</li> <li>Every close bracket has a corresponding open bracket of the same type.</li> </ol> <p>Example 1:</p> <pre><code>Input: s = \"()\"\n\nOutput: true\n</code></pre> <p>Example 2:</p> <pre><code>Input: s = \"()[]{}\"\n\nOutput: true\n</code></pre> <p>Example 3:</p> <pre><code>Input: s = \"(]\"\n\nOutput: false\n</code></pre> <p>Example 4:</p> <pre><code>Input: s = \"([])\"\n\nOutput: true\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= s.length &lt;= 104</code></li> <li><code>s consists of parentheses only '()[]{}'</code></li> </ul>","tags":["String","Stack","Interview Master 100"]},{"location":"problems/20/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["String","Stack","Interview Master 100"]},{"location":"problems/212/","title":"212. Word Search II","text":"","tags":["Array","String","Backtracking","Trie","Matrix"]},{"location":"problems/212/#212-word-search-ii","title":"212. Word Search II","text":"<p>Hard</p>","tags":["Array","String","Backtracking","Trie","Matrix"]},{"location":"problems/212/#description","title":"Description","text":"<p>Given an <code>m x n</code> <code>board</code> of characters and a list of strings <code>words</code>, return all words on the board.</p> <p>Each word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p> <p>Example 1:</p> <pre><code>Input: board = [[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]], words = [\"oath\",\"pea\",\"eat\",\"rain\"]\nOutput: [\"eat\", \"oath\"]\n</code></pre> <p></p> <p>Example 2:</p> <pre><code>Input: board = [[\"a\",\"b\"],[\"c\",\"d\"]], words = [\"abcb\"]\nOutput: []\n</code></pre> <p></p> <p>Constraints:</p> <ul> <li><code>m == board.length</code></li> <li><code>n == board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 12</code></li> <li><code>board[i][j] is a lowercase English letter.</code></li> <li><code>1 &lt;= words.length &lt;= 3 * 104</code></li> <li><code>1 &lt;= words[i].length &lt;= 10</code></li> <li><code>words[i] consists of lowercase English letters.</code></li> <li><code>All the strings of words are unique.</code></li> </ul>","tags":["Array","String","Backtracking","Trie","Matrix"]},{"location":"problems/212/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","String","Backtracking","Trie","Matrix"]},{"location":"problems/2140/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/2226/","title":"2226. Maximum Candies Allocated to K Children","text":"","tags":["Array","Binary Search"]},{"location":"problems/2226/#2226-maximum-candies-allocated-to-k-children","title":"2226. Maximum Candies Allocated to K Children","text":"<p>Medium</p>","tags":["Array","Binary Search"]},{"location":"problems/2226/#description","title":"Description","text":"<p>You are given a 0-indexed integer array candies. Each element in the array denotes a pile of candies of size candies[i]. You can divide each pile into any number of sub piles, but you cannot merge two piles together.</p> <p>You are also given an integer k. You should allocate piles of candies to k children such that each child gets the same number of candies. Each child can be allocated candies from only one pile of candies and some piles of candies may go unused.</p> <p>Return the maximum number of candies each child can get.</p> <p>Example 1:</p> <pre><code>Input: candies = [5,8,6], k = 3\nOutput: 5\nExplanation: We can divide candies[1] into 2 piles of size 5 and 3, and candies[2] into 2 piles of size 5 and 1. We now have five piles of candies of sizes 5, 5, 3, 5, and 1. We can allocate the 3 piles of size 5 to 3 children. It can be proven that each child cannot receive more than 5 candies.\n</code></pre> <p>Example 2:</p> <pre><code>Input: candies = [2,5], k = 11\nOutput: 0\nExplanation: There are 11 children but only 7 candies in total, so it is impossible to ensure each child receives at least one candy. Thus, each child gets no candy and the answer is 0.\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= candies.length &lt;= 105</code></li> <li><code>1 &lt;= candies[i] &lt;= 107</code></li> <li><code>1 &lt;= k &lt;= 1012</code></li> </ul>","tags":["Array","Binary Search"]},{"location":"problems/2226/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Binary Search"]},{"location":"problems/240/","title":"240. Search a 2D Matrix II","text":"","tags":["Array","Binary Search","Divide and Conquer","Matrix"]},{"location":"problems/240/#240-search-a-2d-matrix-ii","title":"240. Search a 2D Matrix II","text":"<p>Medium</p>","tags":["Array","Binary Search","Divide and Conquer","Matrix"]},{"location":"problems/240/#description","title":"Description","text":"<p>Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:</p> <ul> <li>Integers in each row are sorted in ascending from left to right.</li> <li>Integers in each column are sorted in ascending from top to bottom.</li> </ul> <p>Example 1:</p> <pre><code>Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\nOutput: true\n</code></pre> <p></p> <p>Example 2:</p> <pre><code>Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20\nOutput: false\n</code></pre> <p></p> <p>Constraints:</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= n, m &lt;= 300</code></li> <li><code>-109 &lt;= matrix[i][j] &lt;= 109</code></li> <li><code>All the integers in each row are sorted in ascending order.</code></li> <li><code>All the integers in each column are sorted in ascending order.</code></li> <li><code>-109 &lt;= target &lt;= 109</code></li> </ul>","tags":["Array","Binary Search","Divide and Conquer","Matrix"]},{"location":"problems/240/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Binary Search","Divide and Conquer","Matrix"]},{"location":"problems/2503/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/29/","title":"29. Divide Two Integers","text":"","tags":["Math","Bit Manipulation"]},{"location":"problems/29/#29-divide-two-integers","title":"29. Divide Two Integers","text":"<p>Medium</p>","tags":["Math","Bit Manipulation"]},{"location":"problems/29/#description","title":"Description","text":"<p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers without using multiplication, division, and mod operator.</p> <p>The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.</p> <p>Return the quotient after dividing <code>dividend</code> by <code>divisor</code>.</p> <p>Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [\u22122<sup>31</sup>, 2<sup>31</sup> \u2212 1]. For this problem, if the quotient is strictly greater than 2<sup>31</sup> - 1, then return 2<sup>31</sup> - 1, and if the quotient is strictly less than -2<sup>31</sup>, then return -2<sup>31</sup>.</p> <p>Example 1:</p> <pre><code>Input: dividend = 10, divisor = 3\nOutput: 3\nExplanation: 10/3 = 3.33333.. which is truncated to 3.\n</code></pre> <p>Example 2:</p> <pre><code>Input: dividend = 7, divisor = -3\nOutput: -2\nExplanation: 7/-3 = -2.33333.. which is truncated to -2.\n</code></pre> <p>Constraints:</p> <ul> <li><code>-2</code><sup>31</sup><code>&lt;= dividend, divisor &lt;= 2</code><sup>31</sup><code>- 1</code></li> <li><code>divisor != 0</code></li> </ul>","tags":["Math","Bit Manipulation"]},{"location":"problems/29/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Math","Bit Manipulation"]},{"location":"problems/3/","title":"3. Longest Substring Without Repeating Characters","text":"","tags":["Interview Master 100","Hash Table","String","Sliding Window"]},{"location":"problems/3/#3-longest-substring-without-repeating-characters","title":"3. Longest Substring Without Repeating Characters","text":"<p>Medium</p>","tags":["Interview Master 100","Hash Table","String","Sliding Window"]},{"location":"problems/3/#description","title":"Description","text":"<p>Given a string <code>s</code>, find the length of the longest substring (1) without duplicate characters.</p> <ol> <li>           click E \"javascript:void(0)\" \"Store the solution to avoid recomputation\"</li> </ol> <p>Example 1:</p> <pre><code>Input: s = \"abcabcbb\"\nOutput: 3\nExplanation: The answer is \"abc\", with the length of 3.\n</code></pre> <p>Example 2:</p> <pre><code>Input: s = \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\n</code></pre> <p>Example 3:</p> <pre><code>Input: s = \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n</code></pre> <p>Constraints:</p> <ul> <li><code>0 &lt;= s.length &lt;= 5 * 104</code></li> <li><code>s consists of English letters, digits, symbols and spaces.</code></li> </ul>","tags":["Interview Master 100","Hash Table","String","Sliding Window"]},{"location":"problems/3/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Hash Table","String","Sliding Window"]},{"location":"problems/355/","title":"355. Design Twitter","text":"","tags":["Hash Table","Linked List","Design","Heap (Priority Queue)","Neetcode 250"]},{"location":"problems/355/#355-design-twitter","title":"355. Design Twitter","text":"<p>Medium</p>","tags":["Hash Table","Linked List","Design","Heap (Priority Queue)","Neetcode 250"]},{"location":"problems/355/#description","title":"Description","text":"<p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the 10 most recent tweets in the user's news feed.</p> <p>Implement the <code>Twitter</code> class:</p> <ol> <li> <p><code>Twitter()</code></p> <p>Initializes your twitter object.</p> </li> <li> <p><code>void postTweet(int userId, int tweetId)</code></p> <p>Composes a new tweet with ID tweetId by the user userId. Each call to this function will be made with a unique tweetId.</p> </li> <li> <p><code>List&lt;Integer&gt; getNewsFeed(int userId)</code></p> <p>Retrieves the 10 most recent tweet IDs in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be ordered from most recent to least recent.</p> </li> <li> <p><code>void follow(int followerId, int followeeId)</code></p> <p>The user with ID followerId started following the user with ID followeeId.</p> </li> <li> <p><code>void unfollow(int followerId, int followeeId)</code></p> <p>The user with ID followerId started unfollowing the user with ID followeeId.</p> </li> </ol> <p>Example 1:</p> <pre><code>Input\n[\"Twitter\", \"postTweet\", \"getNewsFeed\", \"follow\", \"postTweet\", \"getNewsFeed\", \"unfollow\", \"getNewsFeed\"]\n[[], [1, 5], [1], [1, 2], [2, 6], [1], [1, 2], [1]]\nOutput\n[null, null, [5], null, null, [6, 5], null, [5]]\n\nExplanation\nTwitter twitter = new Twitter();\ntwitter.postTweet(1, 5); // User 1 posts a new tweet (id = 5).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -&gt; [5]. return [5]\ntwitter.follow(1, 2);    // User 1 follows user 2.\ntwitter.postTweet(2, 6); // User 2 posts a new tweet (id = 6).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 2 tweet ids -&gt; [6, 5]. Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.unfollow(1, 2);  // User 1 unfollows user 2.\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -&gt; [5], since user 1 is no longer following user 2.\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= userId, followerId, followeeId &lt;= 500</code></li> <li><code>0 &lt;= tweetId &lt;= 10\u2074</code></li> <li><code>All the tweets have unique IDs.</code></li> <li><code>At most 3 * 10\u2074 calls will be made to postTweet, getNewsFeed, follow, and unfollow.</code></li> <li><code>A user cannot follow himself.</code></li> </ul>","tags":["Hash Table","Linked List","Design","Heap (Priority Queue)","Neetcode 250"]},{"location":"problems/355/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Hash Table","Linked List","Design","Heap (Priority Queue)","Neetcode 250"]},{"location":"problems/374/","title":"374. Guess Number Higher or Lower","text":"","tags":["Binary Search","Interactive"]},{"location":"problems/374/#374-guess-number-higher-or-lower","title":"374. Guess Number Higher or Lower","text":"<p>Easy</p>","tags":["Binary Search","Interactive"]},{"location":"problems/374/#description","title":"Description","text":"<p>We are playing the Guess Game. The game is as follows:</p> <p>I pick a number from <code>1</code> to <code>n</code>. You have to guess which number I picked.</p> <p>Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.</p> <p>You call a pre-defined API <code>int guess(int num)</code>, which returns three possible results:</p> <ul> <li><code>-1</code>: Your guess is higher than the number I picked (i.e. <code>num &gt; pick</code>).</li> <li><code>1</code>: Your guess is lower than the number I picked (i.e. <code>num &lt; pick</code>).</li> <li><code>0</code>: your guess is equal to the number I picked (i.e. <code>num == pick</code>).</li> </ul> <p>Return the number that I picked.</p> <p>Example 1:</p> <pre><code>Input: n = 10, pick = 6\nOutput: 6\n</code></pre> <p>Example 2:</p> <pre><code>Input: n = 1, pick = 1\nOutput: 1\n</code></pre> <p>Example 3:</p> <pre><code>Input: n = 2, pick = 1\nOutput: 1\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= n &lt;= 231 - 1</code></li> <li><code>1 &lt;= pick &lt;= n</code></li> </ul>","tags":["Binary Search","Interactive"]},{"location":"problems/374/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Binary Search","Interactive"]},{"location":"problems/4/","title":"4. Median of Two Sorted Arrays","text":"","tags":["Array","Binary Search","Divide and Conquer"]},{"location":"problems/4/#4-median-of-two-sorted-arrays","title":"4. Median of Two Sorted Arrays","text":"<p>Hard</p>","tags":["Array","Binary Search","Divide and Conquer"]},{"location":"problems/4/#description","title":"Description","text":"<p>Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.</p> <p>The overall run time complexity should be <code>O(log (m+n))</code>.</p> <p>Example 1:</p> <pre><code>Input: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n</code></pre> <p>Example 2:</p> <pre><code>Input: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n</code></pre> <p>Constraints:</p> <ul> <li><code>nums1.length == m</code></li> <li><code>nums2.length == n</code></li> <li><code>0 &lt;= m &lt;= 1000</code></li> <li><code>0 &lt;= n &lt;= 1000</code></li> <li><code>1 &lt;= m + n &lt;= 2000</code></li> <li><code>-106 &lt;= nums1[i], nums2[i] &lt;= 106</code></li> </ul>","tags":["Array","Binary Search","Divide and Conquer"]},{"location":"problems/4/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Binary Search","Divide and Conquer"]},{"location":"problems/40/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/407/","title":"407. Trapping Rain Water II","text":"","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix"]},{"location":"problems/407/#407-trapping-rain-water-ii","title":"407. Trapping Rain Water II","text":"<p>Hard</p>","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix"]},{"location":"problems/407/#description","title":"Description","text":"<p>Given an <code>m x n</code> integer matrix <code>heightMap</code> representing the height of each unit cell in a 2D elevation map, return the volume of water it can trap after raining.</p> <p>Example 1:</p> <p></p> <pre><code>Input: heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]\nOutput: 4\nExplanation: After the rain, water is trapped between the blocks.\nWe have two small ponds 1 and 3 units trapped.\nThe total volume of water trapped is 4.\n</code></pre> <p>Example 2:</p> <p></p> <pre><code>Input: heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]\nOutput: 10\n</code></pre> <p>Constraints:</p> <ul> <li><code>m == heightMap.length</code></li> <li><code>n == heightMap[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>0 &lt;= heightMap[i][j] &lt;= 2 * 104</code></li> </ul>","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix"]},{"location":"problems/407/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix"]},{"location":"problems/42/","title":"42. Trapping Rain Water","text":"","tags":["Interview Master 100","Array","Two Pointers","Dynamic Programming","Stack","Monotonic Stack"]},{"location":"problems/42/#42-trapping-rain-water","title":"42. Trapping Rain Water","text":"<p>Hard</p>","tags":["Interview Master 100","Array","Two Pointers","Dynamic Programming","Stack","Monotonic Stack"]},{"location":"problems/42/#description","title":"Description","text":"<p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p> <p>Example 1:</p> <p></p> <pre><code>Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\nExplanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</code></pre> <p>Example 2:</p> <pre><code>Input: height = [4,2,0,3,2,5]\nOutput: 9\n</code></pre> <p>Constraints:</p> <ul> <li><code>n == height.length</code></li> <li><code>1 &lt;= n &lt;= 2 * 104</code></li> <li><code>0 &lt;= height[i] &lt;= 105</code></li> </ul>","tags":["Interview Master 100","Array","Two Pointers","Dynamic Programming","Stack","Monotonic Stack"]},{"location":"problems/42/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Array","Two Pointers","Dynamic Programming","Stack","Monotonic Stack"]},{"location":"problems/45/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/5/","title":"5. Longest Palindromic Substring","text":"","tags":["Interview Master 100","Two Pointers","String","Dynamic Programming"]},{"location":"problems/5/#5-longest-palindromic-substring","title":"5. Longest Palindromic Substring","text":"<p>Medium</p>","tags":["Interview Master 100","Two Pointers","String","Dynamic Programming"]},{"location":"problems/5/#description","title":"Description","text":"<p>Given a string <code>s</code>, return the longest palindromic substring (1) in <code>s</code>.</p> <p>Example 1:</p> <pre><code>Input: s = \"babad\"\nOutput: \"bab\"\nExplanation: \"aba\" is also a valid answer.\n</code></pre> <p>Example 2:</p> <pre><code>Input: s = \"cbbd\"\nOutput: \"bb\"\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= s.length &lt;= 1000</code></li> <li><code>s</code> + <code>consist of only digits and English letters.</code></li> </ul>","tags":["Interview Master 100","Two Pointers","String","Dynamic Programming"]},{"location":"problems/5/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Two Pointers","String","Dynamic Programming"]},{"location":"problems/50/","title":"50. Pow(x, n)","text":"","tags":["Math","Recursion","Grind 169","Interview Master 100"]},{"location":"problems/50/#50-powx-n","title":"50. Pow(x, n)","text":"<p>Medium</p>","tags":["Math","Recursion","Grind 169","Interview Master 100"]},{"location":"problems/50/#description","title":"Description","text":"<p>Implement pow(x, n), which calculates <code>x</code> raised to the power <code>n</code> (i.e., x<sup>n</sup>).</p> <p>Example 1:</p> <p></p> <pre><code>Input: x = 2.00000, n = 10\nOutput: 1024.00000\n</code></pre> <p>Example 2:</p> <pre><code>Input: x = 2.10000, n = 3\nOutput: 9.26100\n</code></pre> <p>Example 3:</p> <pre><code>Input: x = 2.00000, n = -2\nOutput: 0.25000\nExplanation: 2\u207b\u00b2 = 1/2\u00b2 = 1/4 = 0.25\n</code></pre> <p>Constraints:</p> <ul> <li><code>n == height.length</code></li> <li><code>1 &lt;= n &lt;= 2 * 104</code></li> <li><code>0 &lt;= height[i] &lt;= 105</code></li> </ul>","tags":["Math","Recursion","Grind 169","Interview Master 100"]},{"location":"problems/50/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Math","Recursion","Grind 169","Interview Master 100"]},{"location":"problems/52/","title":"52. N-Queens II","text":"","tags":["Backtracking"]},{"location":"problems/52/#52-n-queens-ii","title":"52. N-Queens II","text":"<p>Hard</p>","tags":["Backtracking"]},{"location":"problems/52/#description","title":"Description","text":"<p>The n-queens puzzle is the problem of placing \\(n\\) queens on an \\(n \\times n\\) chessboard such that no two queens attack each other.</p> <p>Given an integer \\(n\\), return the number of distinct solutions to the n-queens puzzle.</p> <p>Example 1:</p> <pre><code>Input: n = 4\nOutput: 2\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown below\n</code></pre> <p></p> <p>Example 2:</p> <pre><code>Input: n = 1\nOutput: 1\n</code></pre> <p>Constraints:</p> <ul> <li><code>1 &lt;= n &lt;= 9</code></li> </ul>","tags":["Backtracking"]},{"location":"problems/52/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Backtracking"]},{"location":"problems/6/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/7/","title":"Coming Soon","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator"},{"location":"problems/703/","title":"703. Kth Largest Element in a Stream","text":"","tags":["Interview Master 100","Heap (Priority Queue)","Tree","Design","Binary Search Tree","Binary Tree","Data Stream"]},{"location":"problems/703/#703-kth-largest-element-in-a-stream","title":"703. Kth Largest Element in a Stream","text":"<p>Easy</p>","tags":["Interview Master 100","Heap (Priority Queue)","Tree","Design","Binary Search Tree","Binary Tree","Data Stream"]},{"location":"problems/703/#description","title":"Description","text":"<p>You are part of a university admissions office and need to keep track of the kth highest test score from applicants in real-time. This helps to determine cut-off marks for interviews and admissions dynamically as new applicants submit their scores.</p> <p>You are tasked to implement a class which, for a given integer k, maintains a stream of test scores and continuously returns the kth highest test score after a new score has been submitted. More specifically, we are looking for the kth highest score in the sorted list of all scores.</p> <p>Implement the <code>KthLargest</code> class:</p> <p><code>KthLargest(int k, int[] nums)</code> Initializes the object with the integer k and the stream of test scores <code>nums</code>. <code>int add(int val)</code> Adds a new test score val to the stream and returns the element representing the \\(k^{th}\\) largest element in the pool of test scores so far.</p> <p>Example 1:</p> <pre><code>Input:\n[\"KthLargest\", \"add\", \"add\", \"add\", \"add\", \"add\"]\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]\n\nOutput: [null, 4, 5, 5, 8, 8]\n\nExplanation:\n\nKthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);\nkthLargest.add(3); // return 4\nkthLargest.add(5); // return 5\nkthLargest.add(10); // return 5\nkthLargest.add(9); // return 8\nkthLargest.add(4); // return 8\n</code></pre> <p>Example 2:</p> <pre><code>Input:\n[\"KthLargest\", \"add\", \"add\", \"add\", \"add\"]\n[[4, [7, 7, 7, 7, 8, 3]], [2], [10], [9], [9]]\n\nOutput: [null, 7, 7, 7, 8]\n\nExplanation:\n\nKthLargest kthLargest = new KthLargest(4, [7, 7, 7, 7, 8, 3]);\nkthLargest.add(2); // return 7\nkthLargest.add(10); // return 7\nkthLargest.add(9); // return 7\nkthLargest.add(9); // return 8\n</code></pre> <p>Constraints:</p> <ul> <li><code>0 &lt;= nums.length &lt;= 104</code></li> <li><code>1 &lt;= k &lt;= nums.length + 1</code></li> <li><code>-104 &lt;= nums[i] &lt;= 104</code></li> <li><code>-104 &lt;= val &lt;= 104</code></li> <li><code>At most 104 calls will be made to add.</code></li> </ul>","tags":["Interview Master 100","Heap (Priority Queue)","Tree","Design","Binary Search Tree","Binary Tree","Data Stream"]},{"location":"problems/703/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Heap (Priority Queue)","Tree","Design","Binary Search Tree","Binary Tree","Data Stream"]},{"location":"problems/74/","title":"74. Search a 2D Matrix","text":"","tags":["Interview Master 100","Array","Binary Search","Matrix"]},{"location":"problems/74/#74-search-a-2d-matrix","title":"74. Search a 2D Matrix","text":"<p>Medium</p>","tags":["Interview Master 100","Array","Binary Search","Matrix"]},{"location":"problems/74/#description","title":"Description","text":"<p>You are given an m x n integer matrix matrix with the following two properties:</p> <ul> <li>Each row is sorted in non-decreasing order.</li> <li>The first integer of each row is greater than the last integer of the previous row.</li> <li>Given an integer target, return true if target is in matrix or false otherwise.</li> </ul> <p>You must write a solution in <code>O(log(m * n))</code> time complexity.</p> <p>Example 1:</p> <pre><code>Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\nOutput: true\n</code></pre> <p></p> <p>Example 2:</p> <pre><code>Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\nOutput: false\n</code></pre> <p></p> <p>Constraints:</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li><code>-104 &lt;= matrix[i][j], target &lt;= 104</code></li> </ul>","tags":["Interview Master 100","Array","Binary Search","Matrix"]},{"location":"problems/74/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Interview Master 100","Array","Binary Search","Matrix"]},{"location":"problems/746/","title":"746. Min Cost Climbing Stairs","text":"","tags":["Array","Dynamic Programming","Interview Master 100"]},{"location":"problems/746/#746-min-cost-climbing-stairs","title":"746. Min Cost Climbing Stairs","text":"<p>Easy</p>","tags":["Array","Dynamic Programming","Interview Master 100"]},{"location":"problems/746/#description","title":"Description","text":"<p>You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.</p> <p>You can either start from the step with index 0, or the step with index 1.</p> <p>Return the minimum cost to reach the top of the floor.</p> <p>Example 1:</p> <pre><code>Input: cost = [10,15,20]\nOutput: 15\nExplanation: You will start at index 1.\n- Pay 15 and climb two steps to reach the top.\nThe total cost is 15.\n</code></pre> <p>Example 2:</p> <pre><code>Input: cost = [1,100,1,1,1,100,1,1,100,1]\nOutput: 6\nExplanation: You will start at index 0.\n- Pay 1 and climb two steps to reach index 2.\n- Pay 1 and climb two steps to reach index 4.\n- Pay 1 and climb two steps to reach index 6.\n- Pay 1 and climb one step to reach index 7.\n- Pay 1 and climb two steps to reach index 9.\n- Pay 1 and climb one step to reach the top.\nThe total cost is 6.\n</code></pre> <p>Constraints:</p> <ul> <li><code>2 &lt;= cost.length &lt;= 1000</code></li> <li><code>0 &lt;= cost[i] &lt;= 999</code></li> </ul>","tags":["Array","Dynamic Programming","Interview Master 100"]},{"location":"problems/746/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","Dynamic Programming","Interview Master 100"]},{"location":"problems/79/","title":"79. Word Search","text":"","tags":["Array","String","Backtracking","Depth-First Search","Matrix"]},{"location":"problems/79/#79-word-search","title":"79. Word Search","text":"<p>Medium</p>","tags":["Array","String","Backtracking","Depth-First Search","Matrix"]},{"location":"problems/79/#description","title":"Description","text":"<p>Given an <code>m x n</code> grid of characters <code>board</code> and a string <code>word</code>, return <code>true</code> if <code>word</code> exists in the grid.</p> <p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p> <p>Example 1:</p> <pre><code>Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\nOutput: true\n</code></pre> <p></p> <p>Example 2:</p> <pre><code>Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\nOutput: true\n</code></pre> <p></p> <p>Example 3:</p> <pre><code>Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\nOutput: true\n</code></pre> <p></p> <p>Constraints:</p> <ul> <li><code>m == board.length</code></li> <li><code>n = board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 6</code></li> <li><code>1 &lt;= word.length &lt;= 15</code></li> <li><code>board and word consists of only lowercase and uppercase English letters.</code></li> </ul> <p>Follow up: Could you use search pruning to make your solution faster with a larger <code>board</code>?</p>","tags":["Array","String","Backtracking","Depth-First Search","Matrix"]},{"location":"problems/79/#solutions","title":"Solutions \ud83d\udd12","text":"<p> \ud83d\udc4b Already have an account? <p>Please log in to view the solution</p>        Log In      \ud83d\udc4b Don't have an account yet? <p>Access to detailed solutions requires an active subscription account. Get one now \ud83d\ude80</p>        Sign Up      <p></p> <p> \ud83d\udd12 Premium Content <p>This solution requires an active subscription to view.</p>        Upgrade to Pro      <p> Already subscribed? Try refreshing the page. </p> <p></p> Akhil Singh Chauhan                          Creator","tags":["Array","String","Backtracking","Depth-First Search","Matrix"]},{"location":"releases/","title":"Latest Releases, Updates, Solutions","text":"Akhil Singh Chauhan                          Creator"},{"location":"releases/#to-do","title":"To Do","text":"<ul> <li>Login, Logout &amp; SignUp icons on Mobile &amp; Ipads for their respective butto</li> <li>add google ad sense</li> <li>fix content appearing 3 times sometimes on UI</li> <li>Checkout Page, Success Page ,Figure our Payments</li> <li>Integration of Auth0 and Stripe</li> <li>'Access-Control-Allow-Origin': <code>*</code>, 'Access-Control-Allow-Origin' : <code>https://dsabible.com</code>,</li> </ul>"},{"location":"releases/#june-16-2025","title":"June 16, 2025","text":"<ul> <li>Legals in custom footer</li> <li>Added Terms of Service, Subscription Agreement.</li> <li>Glightbox for images customizations.</li> </ul>"},{"location":"releases/#june-15-2025","title":"June 15, 2025","text":"<ul> <li>Added Optimization Problem 4. N-Queen</li> <li>added recursion diagram</li> <li>added new definitions</li> <li>custom theme based accent colors</li> </ul>"},{"location":"releases/#june-14-2025","title":"June 14, 2025","text":""},{"location":"releases/#june-13-2025","title":"June 13, 2025","text":"<ul> <li> Login  Logout   and  SignUp buttons with their icons on headers</li> </ul>"},{"location":"releases/#june-12-2025","title":"June 12, 2025","text":"<ul> <li>Added 139. Word Break</li> </ul>"},{"location":"releases/#june-11-2025","title":"June 11, 2025","text":"<ul> <li>Gated Companiy-Wise Problems Section via Authentication &amp; Authorization with js state management and DOM.</li> </ul>"},{"location":"releases/#june-10-2025","title":"June 10, 2025","text":"<ul> <li>Added 50. Pow(x, n)</li> </ul>"},{"location":"releases/#june-9-2025","title":"June 9, 2025","text":"<ul> <li>Found a new way to group/classify other than the tags.</li> </ul>"},{"location":"releases/#june-8-2025","title":"June 8, 2025","text":"<ul> <li>Made PanZoom feature on images and visual diagrams maintaining gated content \ud83e\udd14</li> <li>Prevented gated content leak upon adding of panzoom effect \ud83d\ude07</li> </ul>"},{"location":"releases/#june-7-2025","title":"June 7, 2025","text":"<ul> <li>Added Glossary, Updated Definitions</li> </ul>"},{"location":"releases/#june-6-2025","title":"June 6, 2025","text":"<ul> <li>Mermaid Diagram for 6. Depot Locations Problem</li> <li>Pan Zoom breaking the code</li> </ul>"},{"location":"releases/#june-5-2025","title":"June 5, 2025","text":"<ul> <li>Refactor code-base spilited problems and their solution into separate components.</li> <li>Combining specific solution with its description after authentication only.</li> </ul>"},{"location":"releases/#june-4-2025","title":"June 4, 2025","text":"<ul> <li>Improved UI response time</li> </ul>"},{"location":"releases/#june-3-2025","title":"June 3, 2025","text":"<ul> <li>Companies asked problems categorization by building company-tag-system.</li> </ul>"},{"location":"releases/#june-2-2025","title":"June 2, 2025","text":"<ul> <li>Major Fix Reinitialized Mkdocs components \ud83d\ude05.</li> <li>Fixed issue where protected content was loading multiple times on page refresh \ud83e\udd2f</li> <li>Added debouncing and rendering guards to prevent duplicate content rendering \ud83d\ude0e</li> <li>Improved event listener management for better performance \ud83e\udee3</li> </ul>"},{"location":"releases/#june-1-2025","title":"June 1, 2025","text":"<ul> <li>added Pull to refresh on PWA on branch pwa-with-pull-refresh</li> <li>79. Word Search</li> <li>212. Word Search II</li> <li>Fixed Pricing Page Subscribe buttons event listeners.</li> </ul>"},{"location":"releases/#may-31-2025","title":"May 31, 2025","text":"<ul> <li>login-subscription card</li> <li>gated content based on auth'n , auth'z and subscription levels</li> <li>responsive content on all screens</li> </ul>"},{"location":"releases/#may-30-2025","title":"May 30, 2025","text":"<ul> <li>established communication between client-side, service-workers, auth-system and payment-system to work in sync.</li> </ul>"},{"location":"releases/#may-29-2025","title":"May 29, 2025","text":"<ul> <li>authorization system signup screen on click of signup button</li> </ul>"},{"location":"releases/#may-28-2025","title":"May 28, 2025","text":"<ul> <li>resolved CORS on service workers</li> </ul>"},{"location":"releases/#may-27-2025","title":"May 27, 2025","text":"<ul> <li>service workers to support payments</li> <li>deployed service workers</li> </ul>"},{"location":"releases/#may-26-2025","title":"May 26, 2025","text":"<ul> <li>checkout page</li> <li>success page</li> </ul>"},{"location":"releases/#may-25-2025","title":"May 25, 2025","text":"<ul> <li>universal checkout links</li> <li>integrated embedded payment system</li> </ul>"},{"location":"releases/#may-24-2025","title":"May 24, 2025","text":"<ul> <li>configured auth system (auth0) and payment system (stripe) via actions</li> <li>linked user_id to same user_payment_id</li> </ul>"},{"location":"releases/#may-23-2025","title":"May 23, 2025","text":"<ul> <li>updated requirements</li> <li>updated topics</li> <li>fixed index heap tag Heap (Priority-Queue) topic mapping</li> </ul>"},{"location":"releases/#may-22-2025","title":"May 22, 2025","text":"<ul> <li>Privacy Policy page</li> </ul>"},{"location":"releases/#may-21-2025","title":"May 21, 2025","text":"<ul> <li>Global and Local Meta Data</li> <li>Custom Author Data Logic via meta tags</li> </ul>"},{"location":"releases/#may-20-2025","title":"May 20, 2025","text":"<ul> <li>Added Debouncing, Event-Listeners</li> </ul>"},{"location":"releases/#may-19-2025","title":"May 19, 2025","text":"<ul> <li>Fast Loading of Pages</li> <li>Removed Lag on problems pages.</li> </ul>"},{"location":"releases/#may-18-2025","title":"May 18, 2025","text":"<ul> <li>Login SignUp Card to protect content from unauthorized access on all pages</li> </ul>"},{"location":"releases/#may-17-2025","title":"May 17, 2025","text":"<ul> <li>Pricing Card</li> </ul>"},{"location":"releases/#may-16-2025","title":"May 16, 2025","text":"<ul> <li>Connected Auth0 with Stripe in Actions</li> </ul>"},{"location":"releases/#may-15-2025","title":"May 15, 2025","text":"<ul> <li>Hacked multiple ways to customize mkdocs material</li> </ul>"},{"location":"releases/#may-14-2025","title":"May 14, 2025","text":"<ul> <li>Login &amp; SignUp buttons in custom-header for desktops with auth routes functionalities</li> </ul>"},{"location":"releases/#may-13-2025","title":"May 13, 2025","text":"<ul> <li>Authentication , Authorization</li> </ul>"},{"location":"releases/#may-12-2025","title":"May 12, 2025","text":"<ul> <li>Added Comment System</li> <li>74. Search a 2D Matrix</li> <li>240. Search a 2D Matrix II</li> </ul>"},{"location":"releases/#may-11-2025","title":"May 11, 2025","text":"<ul> <li>Added FeedBack System</li> </ul>"},{"location":"releases/#may-10-2025","title":"May 10, 2025","text":"<ul> <li>DSA Bible source code is private, deployment is public on ghpages with custom domain name.</li> </ul>"},{"location":"releases/#may-9-2025","title":"May 9, 2025","text":"<ul> <li>Custom Theme setup</li> <li>non-sticky header</li> <li>TOC Optional</li> <li>path to Topic Navigation Page via topic tags</li> <li>inherit &amp; custom via code (optional) admomitions border-colors</li> </ul>"},{"location":"releases/#may-8-2025","title":"May 8, 2025","text":"<ul> <li>Clean, Better solution to fetch all tags on index page using built-in tags (without macros).</li> <li>Clicking on a tag Array take user to respective tag on topics page.</li> <li>Problem Categories</li> </ul>"},{"location":"releases/#may-7-2025","title":"May 7, 2025","text":"<ul> <li>One solution to fetch all tags on index page via macros using url path</li> </ul>"},{"location":"releases/#may-6-2025","title":"May 6, 2025","text":"<ul> <li>Added new feature grouping pages based on TAGS Topics page</li> </ul>"},{"location":"releases/#may-5-2025","title":"May 5, 2025","text":"<ul> <li>3. Composing flight crews</li> </ul>"},{"location":"releases/#may-4-2025","title":"May 4, 2025","text":"<ul> <li>Added Mermaid, GraphViz extensions to support graphs,diagrams for</li> </ul>"},{"location":"releases/#may-2-3-2025","title":"May 2 - 3, 2025","text":"<ul> <li>374. Guess Number Higher or Lower</li> <li>19. Remove Nth Node From End of List</li> </ul>"},{"location":"releases/#may-1-2025","title":"May 1, 2025","text":"<ul> <li>Added Optimization problems with working online IDE</li> <li>1. Mixed Integer Programming</li> </ul>"},{"location":"releases/#apr-14-30-2025","title":"Apr 14 - 30, 2025","text":"<ul> <li>Worked on building a compiler/interpreter/online ide.</li> </ul>"},{"location":"releases/#apr-13-2025","title":"Apr 13, 2025","text":"<ul> <li>App with offline capabilities</li> </ul>"},{"location":"releases/#apr-12-2025","title":"Apr 12, 2025","text":"<ul> <li>Web App is now PWA</li> <li>Significant improvement on focus, redeability</li> </ul>"},{"location":"releases/#apr-11-2025","title":"Apr 11, 2025","text":"<ul> <li>Added CI/CD for auto deployment</li> </ul>"},{"location":"releases/#apr-10-2025","title":"Apr 10, 2025","text":"<ul> <li>746. Min Cost Climbing Stairs</li> </ul>"},{"location":"releases/#apr-9-2025","title":"Apr 9, 2025","text":"<ul> <li>Custom CSS for application</li> </ul>"},{"location":"releases/#apr-8-2025","title":"Apr 8, 2025","text":"<ul> <li>135. Candy</li> </ul>"},{"location":"releases/#apr-5-2025","title":"Apr 5, 2025","text":"<ul> <li>2226. Maximum Candies Allocated to K Children</li> </ul>"},{"location":"releases/#apr-4-2025","title":"Apr 4, 2025","text":"<ul> <li>1. Two Sum</li> <li>2. Add Two Number</li> </ul>"}]}